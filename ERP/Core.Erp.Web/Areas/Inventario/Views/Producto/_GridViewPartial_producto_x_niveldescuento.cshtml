@using System.Web.UI.WebControls;
@model Core.Erp.Info.Inventario.in_Producto_Info
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "lst_producto_x_niveldescuento";
        settings.CallbackRouteValues = new { Controller = "Producto", Action = "GridViewPartial_producto_x_niveldescuento", IdProducto = Model == null ? 0 : Model.IdProducto };
        settings.KeyFieldName = "Secuencia";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Producto", Action = "EditingAddNew_pro_x_desc" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Producto", Action = "EditingUpdate_pro_x_desc" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Producto", Action = "EditingDelete_pro_x_desc" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdNivel"] = null;
            e.NewValues["Porcentaje"] = 0;
        };

         settings.Columns.Add(column =>
         {
             column.FieldName = "IdNivel";
             column.Caption = "Nivel de descuento";
             column.Width = Unit.Percentage(60);
             column.EditorProperties().ComboBox(p =>
             {
                 p.TextField = "Descripcion";
                 p.ValueField = "IdNivel";
                 p.ValueType = typeof(string);
                 p.DataSource = ViewBag.lst_NivelDescuento;
             });
         });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Porcentaje";
            column.Caption = "Porcentaje";
            column.Width = Unit.Percentage(30);
        });
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model.list_producto_x_fa_NivelDescuento).GetHtml()