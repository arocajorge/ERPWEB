@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_inv_det";
        settings.CallbackRouteValues = new { Controller = "IngresoInventario", Action = "GridViewPartial_inv_det", Area = "Inventario" };
        settings.KeyFieldName = "Secuencia";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "IngresoInventario", Action = "EditingAddNew", Area = "Inventario" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "IngresoInventario", Action = "EditingUpdate", Area = "Inventario" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "IngresoInventario", Action = "EditingDelete", Area = "Inventario" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdProducto"] = 0;
            e.NewValues["IdUnidadMedida_sinConversion"] = null;
            e.NewValues["dm_cantidad_sinConversion"] = 0;
            e.NewValues["mv_costo_sinConversion"] = 0;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "pr_descripcion";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(60);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdProducto";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(30);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbProducto_IngresoInventario", DataBinder.Eval(c.DataItem, "IdProducto"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdUnidadMedida_sinConversion";
            column.Caption = "Unidad de medida";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("descripcion", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "descripcion";
                p.ValueField = "IdUnidadMedida";
                p.ValueType = typeof(string);
                p.DataSource = ViewBag.lst_unidad;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "dm_cantidad";
            column.Caption = "cantidad";
            column.Width = Unit.Percentage(15);

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "mv_costo";
            column.Caption = "Costo";
            column.Width = Unit.Percentage(15);

        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()