@model Core.Erp.Info.Inventario.in_Ing_Egr_Inven_Info
@using Core.Erp.Web.Helps
@{
    ViewBag.Title = "Nuevo ingreso";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    function OnFileUploadStart(s, e) {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ActualizarVariablesSession", "Presupuesto", new { Area = "Presupuesto" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            },
            error: function (error) {
            }
        });
    }

    function OnFileUploadComplete(s, e)
    {
        GridViewPartial_inv_det.PerformCallback();
    }
</script>
@using (Html.BeginForm("Nuevo", "IngresoInventario", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.signo)
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="CodMoviInven">Código</label>
                    @Html.TextBoxFor(q => q.CodMoviInven, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodMoviInven, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-7 col-md-2">
                <div class="form-group">
                    <label for="">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.cm_fecha, settings =>
                    {
                        settings.Name = "cm_fecha";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.cm_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBodega">Bodega</label>
                    @Html.DropDownListFor(q => q.IdBodega, new SelectList(ViewBag.lst_bodega, "IdBodega", "bo_Descripcion"), new { @class = "form-control", @id = "IdBodega" })
                    @Html.ValidationMessageFor(q => q.IdBodega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdMotivo_Inv">Motivo*</label>
                    @Html.DropDownListFor(q => q.IdMotivo_Inv, new SelectList(ViewBag.lst_motivo, "IdMotivo_Inv", "Desc_mov_inv"), new { @class = "form-control", @id = "IdMotivo_Inv" })
                    @Html.ValidationMessageFor(q => q.IdMotivo_Inv, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdMovi_inven_tipo">Tipo movimiento*</label>
                    @Html.DropDownListFor(q => q.IdMovi_inven_tipo, new SelectList(ViewBag.lst_tipo, "IdMovi_inven_tipo", "tm_descripcion"), new { @class = "form-control", @id = "IdMovi_inven_tipo" })
                    @Html.ValidationMessageFor(q => q.IdMovi_inven_tipo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cm_observacion">Observación</label>
                    @Html.TextAreaFor(q => q.cm_observacion, new { @class = "form-control", @rows = 3 })
                    @Html.ValidationMessageFor(q => q.cm_observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <label for="Descripcion">Importar detalle</label>
                @Html.DevExpress().UploadControl(settings =>
               {
                   settings.Name = "UploadControlFile";
                   settings.CallbackRouteValues = new { Controller = "IngresoInventario", Action = "UploadControlUpload" };
                   settings.ShowUploadButton = true;
                   settings.ShowProgressPanel = true;
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.NullText = "Selecciona el archivo...";
                   settings.ClientSideEvents.FilesUploadStart = "OnFileUploadStart";
                   settings.ClientSideEvents.FileUploadComplete = "OnFileUploadComplete";
               }).GetHtml()
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_inv_det")
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","IngresoInventario",new { Area = "Inventario" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script type="text/javascript">
$(function () {
    CargarBodega();
    $("#IdSucursal").change(function () {
        CargarBodega();
    });
});

function OnSelectedProductoChanged(s, e) {
    GridViewPartial_inv_det.GetEditor("IdUnidadMedida").PerformCallback();
    SetUnidadMedida(s, e);
}

function UnidadMedidaComboBox_BeginCallback(s, e) {
    e.customArgs["in_IdProducto"] = IdProducto.GetValue();
}

function SetUnidadMedida(s, e) {
    var datos = {
        IdProducto: s.GetValue()
    }
    $.ajax({
        type: 'POST',
        data: JSON.stringify(datos),
        url: '@Url.Action("SetUnidadMedida", "Producto", new { Area = "Inventario" })',
        async: false,
        bDeferRender: true,
        bProcessing: true,
        contentType: 'application/json; charset=utf-8',
        success: function (data) {
            GridViewPartial_inv_det.GetEditor('IdUnidadMedida').SetValue(data.IdUnidadMedida);
        },
        error: function (error) {
        }
    });
};

function CargarBodega() {
$("#IdBodega").empty();

var datos = {
    IdEmpresa: $("#IdEmpresa").val(),
    IdSucursal: $("#IdSucursal").val()
}

$.ajax({
    type: 'POST',
    data: JSON.stringify(datos),
    url: '@Url.Action("CargarBodega", "IngresoInventario", new { Area = "Inventario" })',
    async: false,
    bDeferRender: true,
    bProcessing: true,
    dataType: 'json',
    contentType: 'application/json; charset=utf-8',
    success: function (data) {
    $.each(data, function (i, row) {
        $("#IdBodega").append("<option value=" + row.IdBodega + ">" + row.bo_Descripcion + "</option>");
    });
    },
    error: function (error) {
    }
    });
};

</script>