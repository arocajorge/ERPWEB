@model Core.Erp.Info.Inventario.in_Ing_Egr_Inven_Info
@using Core.Erp.Web.Helps
@{
    ViewBag.Title = "Nuevo ingreso";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    function OnFileUploadStart(s, e) {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ActualizarVariablesSession", "Presupuesto", new { Area = "Presupuesto" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            },
            error: function (error) {
            }
        });
    }

    function OnFileUploadComplete(s, e)
    {
        GridViewPartial_inv_det.PerformCallback();
    }

    function CrearModificarProveedor() {
        var location = GetPathServer();
        if(IdProveedor.GetValue() > 0)
        {
            var win = window.open(location+ "/CuentasPorPagar/Proveedor/Modificar?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdProveedor="+IdProveedor.GetValue(), '_blank');
            win.focus();
        }else
        {
            var win = window.open(location +"/CuentasPorPagar/Proveedor/Nuevo?IdEmpresa="+@Core.Erp.Web.Helps.SessionFixed.IdEmpresa, '_blank');
            win.focus();
        }
    }

    var selectedIDs;
    function OnBeginCallback(s, e) {
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdInventarioOrdenCompra", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    function MostrarModal() {
        selectedIDs = "";
        var datos = {
            IdTransaccionSession:$("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdResponsable: IdResponsable.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListPorIngresar", "IngresoInventarioOrdenCompra", new { Area = "Inventario" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                GridViewPartial_oc_x_ingresar.PerformCallback();
                GridViewPartial_oc_x_ingresar.UnselectRows();
                $("#OcModal").modal("show");

            },
            error: function (error) {
            }
        });
    }

    function AddOC() {
        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("EditingAddNew", "IngresoInventarioOrdenCompra", new { Area = "Inventario" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
            },
            error: function (error) {
            }
        });
        selectedIDs = "";
        GridViewPartial_oc_x_ingresar.PerformCallback();
        GridViewPartial_oc_x_ingresar.UnselectRows();
        GridViewPartial_inv_det.PerformCallback();
        $("#OcModal").modal("hide");
    }

    function ValidarCantidad() {
        var Cantidad = GridViewPartial_inv_det.GetEditor('dm_cantidad_sinConversion').GetValue();
        console.log(Cantidad);
    }
</script>
@using (Html.BeginForm("Nuevo", "IngresoInventarioOrdenCompra", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.signo)

    <div class="modal fade" id="OcModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ordenes de compra</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_oc_x_ingresar")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="AddOC();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>

    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="CodMoviInven">Código</label>
                    @Html.TextBoxFor(q => q.CodMoviInven, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodMoviInven, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdProveedor">Proveedor*</label>
                    @Html.Partial("_CmbProveedor_IngresoOrdenCompra", Model.IdResponsable)
                    @Html.ValidationMessageFor(q => q.IdResponsable, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdProveedor"></label>
                    <button type="button" class="btn btn-primary form-control " onclick="CrearModificarProveedor();">
                        <i class="fa fa-external-link-square"></i>
                    </button>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBodega">Bodega</label>
                    @Html.DropDownListFor(q => q.IdBodega, new SelectList(ViewBag.lst_bodega, "IdBodega", "bo_Descripcion"), new { @class = "form-control", @id = "IdBodega" })
                    @Html.ValidationMessageFor(q => q.IdBodega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdMotivo_Inv">Motivo*</label>
                    @Html.DropDownListFor(q => q.IdMotivo_Inv, new SelectList(ViewBag.lst_motivo, "IdMotivo_Inv", "Desc_mov_inv"), new { @class = "form-control", @id = "IdMotivo_Inv" })
                    @Html.ValidationMessageFor(q => q.IdMotivo_Inv, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-1 col-md-2">
                <div class="form-group">
                    <label for="">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.cm_fecha, settings =>
                   {
                       settings.Name = "cm_fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.cm_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cm_observacion">Observación</label>
                    @Html.TextAreaFor(q => q.cm_observacion, new { @class = "form-control", @rows = 3 })
                    @Html.ValidationMessageFor(q => q.cm_observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-1">
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" id="btn_buscar_op" onclick="MostrarModal();" title="Buscar órdenes de compra">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_inv_det")
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","IngresoInventarioOrdenCompra",new { Area = "Inventario" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script type="text/javascript">
$(function () {
    CargarBodega();
    $("#IdSucursal").change(function () {
        CargarBodega();
    });
});

function OnSelectedProductoChanged(s, e) {
    GridViewPartial_inv_det.GetEditor("IdUnidadMedida").PerformCallback();
    SetUnidadMedida(s, e);
}

function UnidadMedidaComboBox_BeginCallback(s, e) {
    e.customArgs["in_IdProducto"] = IdProducto.GetValue();
}

function SetUnidadMedida(s, e) {
    var datos = {
        IdProducto: s.GetValue()
    }
    $.ajax({
        type: 'POST',
        data: JSON.stringify(datos),
        url: '@Url.Action("SetUnidadMedida", "Producto", new { Area = "Inventario" })',
        async: false,
        bDeferRender: true,
        bProcessing: true,
        contentType: 'application/json; charset=utf-8',
        success: function (data) {
            GridViewPartial_inv_det.GetEditor('IdUnidadMedida').SetValue(data.IdUnidadMedida);
        },
        error: function (error) {
        }
    });
};

function CargarBodega() {
$("#IdBodega").empty();

var datos = {
    IdEmpresa: $("#IdEmpresa").val(),
    IdSucursal: $("#IdSucursal").val()
}

$.ajax({
    type: 'POST',
    data: JSON.stringify(datos),
    url: '@Url.Action("CargarBodega", "IngresoInventarioOrdenCompra", new { Area = "Inventario" })',
    async: false,
    bDeferRender: true,
    bProcessing: true,
    dataType: 'json',
    contentType: 'application/json; charset=utf-8',
    success: function (data) {
    $.each(data, function (i, row) {
        $("#IdBodega").append("<option value=" + row.IdBodega + ">" + row.bo_Descripcion + "</option>");
    });
    },
    error: function (error) {
    }
    });
};
   
</script>