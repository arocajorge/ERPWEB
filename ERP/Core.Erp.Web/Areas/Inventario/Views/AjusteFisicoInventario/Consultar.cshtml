@model Core.Erp.Info.Inventario.in_Ajuste_Info
@using Core.Erp.Web.Helps
@{
    ViewBag.Title = "Consultar ajuste físico";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    function UnidadMedidaComboBox_BeginCallback(s, e) {
        e.customArgs["in_IdProducto"] = IdProducto.GetValue();
    }
</script>
@using (Html.BeginForm("Consultar", "AjusteFisicoInventario", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdAjuste, new { @id = "IdAjuste" })
    @Html.HiddenFor(q => q.IdMovi_inven_tipo_ing, new { @id = "IdMovi_inven_tipo_ing" })
    @Html.HiddenFor(q => q.IdMovi_inven_tipo_egr, new { @id = "IdMovi_inven_tipo_egr" })
    @Html.HiddenFor(q => q.IdNumMovi_ing, new { @id = "IdNumMovi_ing" })
    @Html.HiddenFor(q => q.IdNumMovi_egr, new { @id = "IdNumMovi_egr" })
    @Html.HiddenFor(q => q.Nuevo, new { @id = "Nuevo" })
    @Html.HiddenFor(q => q.Modificar, new { @id = "Modificar" })
    @Html.HiddenFor(q => q.Anular, new { @id = "Anular" })
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-8 col-md-1">
                <div class="form-group">
                    <div id="btnNuevo" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","AjusteFisicoInventario",new { Area = "Inventario", IdEmpresa = Model.IdEmpresa },null)">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <div id="btnModificar" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Modificar" href="@Url.Action("Modificar", "AjusteFisicoInventario", new { Area = "Inventario", IdEmpresa = Model.IdEmpresa, IdSucursal = Model.IdSucursal, IdAjuste=Model.IdAjuste }, null)">
                            <i class="fa fa-edit"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <div id="btnAnular" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Anular" href="@Url.Action("Anular", "AjusteFisicoInventario", new { Area = "Inventario", IdEmpresa = Model.IdEmpresa, IdSucursal=Model.IdSucursal, IdAjuste=Model.IdAjuste }, null)">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" id="btn_imprimir" onclick="Imprimir();" title="Imprimir">
                        <i class="fa fa-print"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBodega">Bodega*</label>
                    @Html.DropDownListFor(q => q.IdBodega, new SelectList(ViewBag.lst_bodega, "IdBodega", "bo_Descripcion"), new { @class = "form-control", @id = "IdBodega" })
                    @Html.ValidationMessageFor(q => q.IdBodega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdMotivo_Inv">Estado*</label>
                    @Html.DropDownListFor(q => q.IdCatalogo_Estado, new SelectList(ViewBag.lst_estado, "IdCatalogo", "Nombre"), new { @class = "form-control", @id = "IdCatalogo_Estado" })
                    @Html.ValidationMessageFor(q => q.IdCatalogo_Estado, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.Fecha, settings =>
                   {
                       settings.Name = "Fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       settings.Properties.AllowMouseWheel = false;
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cm_observacion">Observación</label>
                    @Html.TextAreaFor(q => q.Observacion, new { @class = "form-control", @rows = 3 })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_ajuste_fisico_det")
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <a class="btn btn-default" href="@Url.Action("Index","AjusteFisicoInventario",new { Area = "Inventario" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script type="text/javascript">
    $(function () {
        MostrarBotonesAccion();

        $("#IdSucursal").change(function () {
            CargarBodega();
        });
    });

    function MostrarBotonesAccion() {
        if ($("#Nuevo").val() == 1)
        {
            $("#btnNuevo").show();
        }
        if ($("#Modificar").val() == 1)
        {
            $("#btnModificar").show();
        }
        if ($("#Anular").val() == 1)
        {
            $("#btnAnular").show();
        }
    }

    function CargarBodega() {
        $("#IdBodega").empty();

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val()
        }

        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CargarBodega", "AjusteFisicoInventario", new { Area = "Inventario" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBodega").append("<option value=" + row.IdBodega + ">" + row.bo_Descripcion + "</option>");
                });
            },
            error: function (error) {
            }
        });
    };

    function CargarDetalle() {
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            Fecha: Fecha.GetDate(),
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdBodega: $("#IdBodega").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CargarDetalleAjuste", "AjusteFisicoInventario", new { Area = "Inventario" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
            },
            error: function (error) {
            }
        });

        GridViewPartial_ajuste_fisico_det.PerformCallback();
    }

    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/InventarioReportes/INV_018?IdEmpresa="+@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdAjuste="+@Model.IdAjuste, '_blank');
        win.focus();
    }
</script>