@model Core.Erp.Info.RRHH.ro_EmpleadoNovedadCargaMasiva_Info
@{
    ViewBag.Title = "Nueva novedad";
    if (Session["IdUsuario"] == null || Session["IdEmpresa"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Nuevo", "ImportacionNovedades", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    @Html.HiddenFor(q => q.IdCarga)

    @*<div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="IdNomina_Tipo">Nómina*</label>
                        @Html.DropDownListFor(q => q.IdNomina_Tipo, new SelectList(ViewBag.lst_nomina, "IdNomina_Tipo", "Descripcion"), "== Seleccione ==", new { @class = "form-control", @id = "IdNomina_Tipo" })
                        @Html.ValidationMessageFor(q => q.IdNomina_Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="IdNomina_TipoLiqui">Tipo liquidación de nómina*</label>
                        @Html.DropDownListFor(q => q.IdNomina_TipoLiqui, new SelectList(ViewBag.lst_nomina_tipo, "IdNomina_TipoLiqui", "DescripcionProcesoNomina"), "== Seleccione ==", new { @class = "form-control", @id = "IdNomina_TipoLiqui" })
                        @Html.ValidationMessageFor(q => q.IdNomina_TipoLiqui, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="Observacion">Observación</label>
                        @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>*@

    <div class="row">

        <div class="col-md-4">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="Fecha">Fecha carga*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.FechaCarga, settings =>
                    {
                        settings.Name = "FechaCarga";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.FechaCarga, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">

        <div class="col-md-4">
            <div class="col-md-12">
                @using (Html.BeginForm("UploadControlUpload", "ImportacionNovedades", FormMethod.Post))
                {
                    @Html.DevExpress().UploadControl(settings => {
                    settings.Name = "UploadControlFile";
                    settings.CallbackRouteValues = new { Controller = "Home", Action = "UploadControlUpload" };
                    settings.ShowUploadButton = true;
                    settings.ShowProgressPanel = true;
                    settings.NullText = "Click here to browse files...";
                    settings.ClientSideEvents.FileUploadComplete = "function(s, e) { GridView1.PerformCallback({ path: e.callbackData}); }";
                }).GetHtml()
                }
            </div>
        </div>
    </div>
  
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="detalle">Detalle de la novedad</label>
                    @Html.Action("GridViewPartial_importacion_novedades")
                    @Html.ValidationMessageFor(q => q.detalle, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","EmpleadoNovedad",new { Area = "RRHH" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}


<script>


            $("#IdNomina_Tipo").change(function () {
                $("#IdNomina_TipoLiqui").empty();
                cargar_tipo_liquidacion_nomina();

            });




            function cargar_tipo_liquidacion_nomina() {
                var datos = {
                    IdNomina: $("#IdNomina_Tipo").val()
                }

                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("get_lst_nomina_tipo_liq", "NominaTipoLiquidacion", new { Area = "RRHH" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        $.each(data, function (i, row) {
                            $("#IdNomina_TipoLiqui").append("<option value=" + row.IdNomina_TipoLiqui + ">" + row.DescripcionProcesoNomina + "</option>");
                        });
                    },
                    error: function (error) {
                    }
                });
            };

</script>
