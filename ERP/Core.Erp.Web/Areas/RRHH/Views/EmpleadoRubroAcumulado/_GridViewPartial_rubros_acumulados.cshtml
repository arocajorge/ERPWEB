@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_rubros_acumulados";
        settings.CallbackRouteValues = new { Controller = "EmpleadoRubroAcumulado", Action = "GridViewPartial_rubros_acumulados" };

        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdRubro";
        //CConfiguracion responsive

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 800;

        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 500;
        settings.Settings.VerticalScrollableHeight = 500;
        settings.CommandColumn.Width = Unit.Pixel(100);
        settings.CommandColumn.AdaptivePriority = 1;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;


        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf);
            t.Items.Add(GridViewToolbarCommand.ExportToXls);
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
            t.Items.Add(GridViewToolbarCommand.ExportToDocx);
            t.Items.Add(GridViewToolbarCommand.ExportToRtf);
            t.Items.Add(GridViewToolbarCommand.ExportToCsv);
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {

                ViewContext.Writer.Write(
                    Html.ActionLink("Anular", "Anular", new { IdEmpleado = DataBinder.Eval(tc.DataItem, "IdEmpleado"), IdRubro = DataBinder.Eval(tc.DataItem, "IdRubro") },
                        new { onclick = "return confirm('¿Está seguro de que desea anular el registro?')" })
                );
                //int IdNomina_Tipo=0, int IdNomina_TipoLiqui = 0,string IdRubro="", decimal IdEmpleado=0
            });
            c.SetHeaderTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Nuevo", "Nuevo").ToHtmlString()
                );
            });
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(100);
        });


        settings.Columns.Add("IdRubro", "ID").Width = Unit.Percentage(8);
        settings.Columns.Add("pe_cedulaRuc","Cédula").Width = Unit.Percentage(10);
        settings.Columns.Add("pe_nombreCompleto","Nombres").Width = Unit.Percentage(30);
        settings.Columns.Add("ru_descripcion","Rubro").Width = Unit.Percentage(20);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fec_Inicio_Acumulacion";
            column.Caption = "Fecha solicitud";
            column.Width = Unit.Percentage(13);
            column.PropertiesEdit.DisplayFormatString = "d";

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fec_Fin_Acumulacion";
            column.Caption = "Fin solicitud";
            column.Width = Unit.Percentage(13);
            column.PropertiesEdit.DisplayFormatString = "d";

        });
    });
}
@grid.Bind(Model).GetHtml()