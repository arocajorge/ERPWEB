@model Core.Erp.Info.RRHH.ro_empleado_x_ro_rubro_Info

@{
    ViewBag.Title = "Nuevo rubro fijo";
    if (Session["IdUsuario"] == null || Session["IdEmpresa"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Nuevo", "EmpleadoPorRubro", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdCtaCblePadre">Empleado*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEmpleado, settings =>
               {
                   settings.Name = "IdEmpleado";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {2}";
                   settings.Properties.Columns.Add("IdEmpleado", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("pe_cedulaRuc", "Cédula").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("Empleado", "Nombres").Width = System.Web.UI.WebControls.Unit.Percentage(80);

                   //Campo ID
                   settings.Properties.ValueField = "IdEmpleado";
                   settings.Properties.ValueType = typeof(decimal);
                   settings.Properties.TextField = "Empleado";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lst_empleado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEmpleado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdContrato_Tipo">Nómina*</label>
                    @Html.DropDownListFor(q => q.IdNomina_Tipo, new SelectList(ViewBag.lst_nomina, "IdNomina_Tipo", "Descripcion"), "== Seleccione ==", new { @class = "form-control", @id = "IdNomina_Tipo" })
                    @Html.ValidationMessageFor(q => q.IdNomina_Tipo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdContrato_Tipo">Tipo liquidación de nómina*</label>
                    @Html.DropDownListFor(q => q.IdNomina_TipoLiqui, new SelectList(ViewBag.lst_nomina_tipo, "IdNomina_TipoLiqui", "DescripcionProcesoNomina"), "== Seleccione ==", new { @class = "form-control", @id= "IdNomina_TipoLiqui" })
                    @Html.ValidationMessageFor(q => q.IdNomina_TipoLiqui, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdRubro">Rubro*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdRubro, settings =>
               {
                   settings.Name = "IdRubro";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("ru_codRolGen", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("ru_descripcion", "Rubro").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                   settings.Properties.Columns.Add("ru_tipo", "Tipo").Width = System.Web.UI.WebControls.Unit.Percentage(10);

                   //Campo ID
                   settings.Properties.ValueField = "IdRubro";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "ru_descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lst_rubro).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEmpleado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="Valor">Valor*</label>
                    @Html.TextBoxFor(q => q.Valor, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Valor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","EmpleadoPorRubro",new { Area = "RRHH" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script>


       $("#IdNomina_Tipo").change(function () {
           $("#IdNomina_TipoLiqui").empty();
             cargar_tipo_liquidacion_nomina();

        });

      


        function cargar_tipo_liquidacion_nomina() {
            var datos = {
                IdNomina: $("#IdNomina_Tipo").val()
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_lst_nomina_tipo_liq", "NominaTipoLiquidacion", new { Area = "RRHH" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                    $.each(data, function (i, row) {
                        $("#IdNomina_TipoLiqui").append("<option value=" + row.IdNomina_TipoLiqui + ">" + row.DescripcionProcesoNomina + "</option>");
                    });
                },
                error: function (error) {
                }
            });
        };

    

</script>
