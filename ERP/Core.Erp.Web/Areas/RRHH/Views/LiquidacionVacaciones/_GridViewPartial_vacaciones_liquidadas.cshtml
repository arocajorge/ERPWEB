@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_vacaciones_liquidadas";
        settings.CallbackRouteValues = new { Controller = "LiquidacionVacaciones", Action = "GridViewPartial_vacaciones_liquidadas" };

        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdLiquidacion";

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;


        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf);
            t.Items.Add(GridViewToolbarCommand.ExportToXls);
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
            t.Items.Add(GridViewToolbarCommand.ExportToDocx);
            t.Items.Add(GridViewToolbarCommand.ExportToRtf);
            t.Items.Add(GridViewToolbarCommand.ExportToCsv);
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.Width = Unit.Percentage(5);
            c.SetDataItemTemplateContent(tc =>
            {
                if (Convert.ToString(DataBinder.Eval(tc.DataItem, "Estado")) == "A")
                {
                    ViewContext.Writer.Write(
                         Html.ActionLink("Modificar", "Modificar", new { IdEmpleado = DataBinder.Eval(tc.DataItem, "IdEmpleado"), IdLiquidacion = DataBinder.Eval(tc.DataItem, "IdLiquidacion") }) + "&nbsp;" +
                         Html.ActionLink("Anular", "Anular", new { IdEmpleado = DataBinder.Eval(tc.DataItem, "IdEmpleado"), IdLiquidacion = DataBinder.Eval(tc.DataItem, "IdLiquidacion") },
                            new { onclick = "return confirm('¿Está seguro de que desea anular el registro?')" })
                    );
                }

            });

            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Percentage(15);
        });


        settings.Columns.Add("IdLiquidacion", "ID").Width = Unit.Percentage(5);
        settings.Columns.Add("empleado", "Empleado").Width = Unit.Percentage(25);

        settings.Columns.Add("Observaciones", "Observación").Width = Unit.Percentage(15);
        settings.Columns.Add("Dias_q_Corresponde", "Ganados").Width = Unit.Percentage(10);
        settings.Columns.Add("Dias_a_disfrutar", "Tomados").Width = Unit.Percentage(10);
        settings.Columns.Add("Dias_pendiente", "Pendientes").Width = Unit.Percentage(10);
        settings.Columns.Add(column =>
        {
            column.FieldName = "FechaPago";
            column.Caption = "Fecha pago";
            column.Width = Unit.Percentage(11);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add("Periodo","Periodo").Width = Unit.Percentage(20);



    });
}
@grid.Bind(Model).GetHtml()