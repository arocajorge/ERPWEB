@using System.Web.UI.WebControls
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_ro_rol";
        settings.CallbackRouteValues = new { Controller = "ProcesarRol", Action = "GridViewPartial_ro_rol", IdSucursal = ViewBag.IdSucursal };

        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdPeriodo";

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.Width = Unit.Percentage(100);

        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;


        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };
        settings.HtmlRowPrepared = (s, e) =>
        {
            //if (Convert.ToString(e.GetValue("ru_estado")) == "I")
            //{
            //    e.Row.ForeColor = System.Drawing.Color.Red;
            //}
        };

        settings.Columns.Add("IdRol", "ID").Width = Unit.Percentage(3);

        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {
                if (Convert.ToString(DataBinder.Eval(tc.DataItem, "EstadoRol")) == "ABIERTO")
                {

                    ViewContext.Writer.Write(
                    Html.ActionLink("Reprocesar", "Modificar", new { IdNomina_Tipo = DataBinder.Eval(tc.DataItem, "IdNomina_Tipo"), IdNomina_TipoLiqui = DataBinder.Eval(tc.DataItem, "IdNomina_TipoLiqui"), IdPeriodo = DataBinder.Eval(tc.DataItem, "IdPeriodo") , IdRol = DataBinder.Eval(tc.DataItem, "IdRol") },
                        new { onclick = "return confirm('¿Está seguro de que desea reprocesar la nómina?')" })
                        );

                }
            });
            c.SetHeaderTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Nuevo", "Nuevo").ToHtmlString()
                );
            });
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(85);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.Width = Unit.Pixel(85);
            column.SetDataItemTemplateContent(container =>
            {
                if (Convert.ToString(DataBinder.Eval(container.DataItem, "EstadoRol")) == "ABIERTO")
                {

                    Html.DevExpress().HyperLink(hyperlink =>
                    {
                        var IdNomina_Tipo = DataBinder.Eval(container.DataItem, "IdNomina_Tipo");
                        var IdNomina_TipoLiqui = DataBinder.Eval(container.DataItem, "IdNomina_TipoLiqui");
                        var IdPeriodo = DataBinder.Eval(container.DataItem, "IdPeriodo");
                        var IdRol = DataBinder.Eval(container.DataItem, "IdRol");

                        hyperlink.Properties.Text = "Cerrar rol";
                        hyperlink.NavigateUrl = Url.Action("CerrarPeriodo", "ProcesarRol", new { IdNomina_Tipo = IdNomina_Tipo, IdNomina_TipoLiqui = IdNomina_TipoLiqui, IdPeriodo = IdPeriodo, IdRol=IdRol });
                    }).Render();

                }
            });
        });

        settings.Columns.Add("Su_Descripcion", "Sucursal").Width = Unit.Percentage(10);

        settings.Columns.Add("Descripcion","Nómina").Width=Unit.Percentage(15);
        settings.Columns.Add("DescripcionProcesoNomina","Proceso").Width = Unit.Percentage(15);
        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_FechaIni";
            column.Caption = "Desde";
            column.Width = Unit.Percentage(8);
            column.PropertiesEdit.DisplayFormatString = "d";

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_FechaFin";
            column.Caption = "Hasta";
            column.Width = Unit.Percentage(8);
            column.PropertiesEdit.DisplayFormatString = "d";

        });
        settings.Columns.Add("EstadoRol", "Estado").Width=Unit.Percentage(10);

        settings.Columns.Add(column =>
        {
            column.Caption = "General";

            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write("<span class=\"glyphicon  glyphicon-print\" onclick=\"OpenInNewTabWinBrowser('" + Url.Action("ROL_021", "RRHHReportes", new { Area = "Reportes", IdEmpresa = DataBinder.Eval(c.DataItem, "IdEmpresa"), IdNomina_Tipo = DataBinder.Eval(c.DataItem, "IdNomina_Tipo"), IdNomina_TipoLiqui = DataBinder.Eval(c.DataItem, "IdNomina_TipoLiqui"), IdPeriodo = DataBinder.Eval(c.DataItem, "IdPeriodo"), IdSucursal = DataBinder.Eval(c.DataItem, "IdSucursal") }, Request.Url.Scheme) + "');\"></span>");
            });
            column.Width = System.Web.UI.WebControls.Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "Individual";
            column.SetDataItemTemplateContent(c =>
            {

                ViewContext.Writer.Write("<span class=\"glyphicon  glyphicon-print\" onclick=\"OpenInNewTabWinBrowser('" + Url.Action("ROL_002", "RRHHReportes", new { Area = "Reportes", IdEmpresa = DataBinder.Eval(c.DataItem, "IdEmpresa"), IdNomina_Tipo = DataBinder.Eval(c.DataItem, "IdNomina_Tipo"), IdNomina_TipoLiqui = DataBinder.Eval(c.DataItem, "IdNomina_TipoLiqui"), IdPeriodo = DataBinder.Eval(c.DataItem, "IdPeriodo"), IdSucursal = DataBinder.Eval(c.DataItem, "IdSucursal") }, Request.Url.Scheme) + "');\"></span>");
            });
            column.Width = System.Web.UI.WebControls.Unit.Percentage(6);
        });
    });
}
@grid.Bind(Model).GetHtml()