@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_sueldo_x_pagar";
        settings.CallbackRouteValues = new { Controller = "ProcesarRol", Action = "GridViewPartial_sueldo_x_pagar" };


        settings.KeyFieldName = "secuencia";
        settings.Width = Unit.Percentage(100);

        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ProcesarRol", Action = "EditingUpdate" };

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.Width = Unit.Percentage(100);
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = false;



        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;


        settings.SettingsContextMenu.Enabled = false;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };



        //settings.Columns.Add("secuencia", "#").Width = Unit.Percentage(2);
        //settings.Columns.Add(column =>
        //{
        //    column.FieldName = "IdCtaCble";
        //    column.Caption = "Cuenta contable";
        //    column.Width = Unit.Percentage(30);
        //    column.EditorProperties().ComboBox(p =>
        //    {
        //        p.Columns.Add("IdCtaCble", "Código").Width = Unit.Percentage(30);
        //        p.Columns.Add("pc_Cuenta", "Cuenta").Width = Unit.Percentage(70);
        //        p.ValueField = "IdCtaCble";
        //        p.ValueType = typeof(string);
        //        p.DataSource = ViewBag.lst_cuentas;
        //    });
        //});

        settings.Columns.Add(column =>
        {
            column.FieldName = "Su_Descripcion";
            column.Caption = "Sucursal";
            column.Width = Unit.Percentage(5);
            column.GroupIndex = 0;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "pc_Cuenta";
            column.Caption = "Cuenta contable";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCtaCble";
            column.Caption = "Cuenta contable";
            column.Width = Unit.Percentage(35);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbCuenta_sueldos", DataBinder.Eval(c.DataItem, "IdCtaCble"));
            });
        });
        settings.Columns.Add("dc_Observacion", "Descripción").Width=Unit.Percentage(40);
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_Valor_debe";
            column.Caption = "Debe";
            column.Width = Unit.Percentage(15);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_Valor_haber";
            column.Caption = "Haber";
            column.Width = Unit.Percentage(15);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
            });
        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_debe").DisplayFormat = "Debe {0:n2}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_haber").DisplayFormat = "Haber {0:n2}";
        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_debe").DisplayFormat = "Debe {0:n2}";
        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_haber").DisplayFormat = "Haber {0:n2}";
        settings.PreRender = (sender, e) =>
        {
            MVCxGridView gridView = (MVCxGridView)sender;
            gridView.ExpandAll();
        };

        settings.BeforeGetCallbackResult = (sender, e) =>
        {
            MVCxGridView gridView = (MVCxGridView)sender;
            gridView.ExpandAll();
        };
        settings.Settings.ShowFooter = true;

    });
}
@grid.Bind(Model).GetHtml()