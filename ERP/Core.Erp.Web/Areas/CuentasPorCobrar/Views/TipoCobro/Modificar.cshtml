@model Core.Erp.Info.CuentasPorCobrar.cxc_cobro_tipo_Info
@{
    ViewBag.Title = "Modificar tipo cobro";
    if (Session["IdUsuario"] == null || Session["IdEmpresa"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Modificar", "TipoCobro", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa);
    @Html.HiddenFor(q => q.IdCobro_tipo)
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdCobro_tipo">Código*</label>
                    @Html.TextBoxFor(q => q.IdCobro_tipo, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdCobro_tipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tc_abreviatura">Abreviatura*</label>
                    @Html.TextBoxFor(q => q.tc_abreviatura, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.tc_abreviatura, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tc_Orden">Orden</label>
                    @Html.TextBoxFor(q => q.tc_Orden, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.tc_Orden, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdMotivo_tipo_cobro">tipo motivo</label>
                    @Html.HiddenFor(q => q.IdMotivo_tipo_cobro)
                    @Html.DevExpress().ComboBoxFor(q => q.IdMotivo_tipo_cobro, settings =>
               {
                   settings.Name = "IdMotivo_tipo_cobro";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdMotivo_tipo_cobro", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("nom_Motivo_tipo_cobro", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                   //Campo ID
                   settings.Properties.ValueField = "IdMotivo_tipo_cobro";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "nom_Motivo_tipo_cobro";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                   settings.ReadOnly = true;
                   settings.Properties.DropDownButton.Enabled = false;
               }).BindList(ViewBag.lst_motivo_cobro).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdMotivo_tipo_cobro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tc_Que_Tipo_Registro_Genera">tipo que se registra</label>
                    @Html.HiddenFor(q => q.tc_Que_Tipo_Registro_Genera)
                    @Html.DevExpress().ComboBoxFor(q => q.tc_Que_Tipo_Registro_Genera, settings =>
               {
                   settings.Name = "tc_Que_Tipo_Registro_Genera";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdCatalogo_tipo", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("Descripcion", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                   //Campo ID
                   settings.Properties.ValueField = "IdCatalogo_tipo";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown; settings.ReadOnly = true;
                   settings.Properties.DropDownButton.Enabled = false;
               }).BindList(ViewBag.lst_catalogotipo).GetHtml()
                    @Html.ValidationMessageFor(q => q.tc_Que_Tipo_Registro_Genera, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tc_Tomar_Cta_Cble_De">Se toma cuenta contable de </label>
                    @Html.DropDownListFor(q => q.tc_Tomar_Cta_Cble_De, new SelectList(ViewBag.lst_cta, "Key", "Value"), new { @class = "form-control", @id = "tc_Tomar_Cta_Cble_De", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.tc_Tomar_Cta_Cble_De, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div><div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tc_descripcion">Descripción*</label>
                    @Html.TextBoxFor(q => q.tc_descripcion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.tc_descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="PorcentajeRet">Porcentaje</label>
                    @Html.TextBoxFor(q => q.PorcentajeRet, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.PorcentajeRet, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_tipo_param")
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="ESRetenFTE_bool">@Html.CheckBoxFor(q => q.ESRetenFTE_bool, new { @id = "ESRetenFTE_bool" }) Es retención a la fuente</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="ESRetenIVA_bool">@Html.CheckBoxFor(q => q.ESRetenIVA_bool, new { @id = "ESRetenIVA_bool" }) Es retención al IVA</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_EsCheque_bool">@Html.CheckBoxFor(q => q.tc_EsCheque_bool, new { @id = "tc_EsCheque_bool" }) Es un cheque</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_Afecha_bool">@Html.CheckBoxFor(q => q.tc_Afecha_bool, new { @id = "tc_Afecha_bool" }) Es documento a fecha</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_cobroDirecto_bool">@Html.CheckBoxFor(q => q.tc_cobroDirecto_bool, new { @id = "tc_cobroDirecto_bool" }) Es cobro directo</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_cobroInDirecto_bool">@Html.CheckBoxFor(q => q.tc_cobroInDirecto_bool, new { @id = "tc_cobroInDirecto_bool" }) Es cobro indirecto</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_docXCobrar_bool">@Html.CheckBoxFor(q => q.tc_docXCobrar_bool, new { @id = "tc_docXCobrar_bool" }) Es documento por cobrar</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_generaNCAuto_bool">@Html.CheckBoxFor(q => q.tc_generaNCAuto_bool, new { @id = "tc_generaNCAuto_bool" }) Se genera cobro automatico</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_SePuede_Depositar_bool">@Html.CheckBoxFor(q => q.tc_SePuede_Depositar_bool, new { @id = "tc_SePuede_Depositar_bool" }) Se puede depositar</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_seCobra_bool">@Html.CheckBoxFor(q => q.tc_seCobra_bool, new { @id = "tc_generaNCAuto_btc_seCobra_boolool" }) Se cobra</label>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="checkbox">
                        <label for="tc_interno_bool">@Html.CheckBoxFor(q => q.tc_interno_bool, new { @id = "tc_interno_bool" }) Interno</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","TipoCobro", new { Area = "CuentasPorCobrar"  },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}