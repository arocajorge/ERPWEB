@model Core.Erp.Info.CuentasPorCobrar.cxc_cobro_tipo_Info
@{
    ViewBag.Title = "Consultar tipo de cobro";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Consultar", "TipoCobro", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    @Html.HiddenFor(q => q.IdCobro_tipo)
    @Html.HiddenFor(q => q.Nuevo, new { @id = "Nuevo" })
    @Html.HiddenFor(q => q.Modificar, new { @id = "Modificar" })
    @Html.HiddenFor(q => q.Anular, new { @id = "Anular" })
    if (@ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-9 col-md-1">
                <div class="form-group">
                    <div id="btnNuevo" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","TipoCobro",new { Area = "CuentasPorCobrar", IdEmpresa = Model.IdEmpresa },null)">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <div id="btnModificar" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Modificar" href="@Url.Action("Modificar", "TipoCobro", new { Area = "CuentasPorCobrar", IdEmpresa = Model.IdEmpresa, IdCobro_tipo = Model.IdCobro_tipo }, null)">
                            <i class="fa fa-edit"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <div id="btnAnular" hidden>
                        <a type="button" class="btn btn-primary form-control" title="Anular" href="@Url.Action("Anular", "TipoCobro", new { Area = "CuentasPorCobrar", IdEmpresa = Model.IdEmpresa, IdCobro_tipo=Model.IdCobro_tipo }, null)">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdCobro_tipo">ID*</label>
                    @Html.TextBoxFor(q => q.IdCobro_tipo, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdCobro_tipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="tc_abreviatura">Abreviatura*</label>
                    @Html.TextBoxFor(q => q.tc_abreviatura, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.tc_abreviatura, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdMotivo_tipo_cobro">tipo motivo</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdMotivo_tipo_cobro, settings =>
               {
                   settings.Name = "IdMotivo_tipo_cobro";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdMotivo_tipo_cobro", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("nom_Motivo_tipo_cobro", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                   //Campo ID
                   settings.Properties.ValueField = "IdMotivo_tipo_cobro";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "nom_Motivo_tipo_cobro";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
               }).BindList(ViewBag.lst_motivo_cobro).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdMotivo_tipo_cobro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tc_Tomar_Cta_Cble_De">Se toma cuenta contable de </label>
                    @Html.DropDownListFor(q => q.tc_Tomar_Cta_Cble_De, new SelectList(ViewBag.lst_cta, "Key", "Value"), new { @class = "form-control", @id = "tc_Tomar_Cta_Cble_De" })
                    @Html.ValidationMessageFor(q => q.tc_Tomar_Cta_Cble_De, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div><div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tc_descripcion">Descripción*</label>
                    @Html.TextBoxFor(q => q.tc_descripcion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.tc_descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    @Html.DevExpress().CheckBoxFor( q=>q.ESRetenFTE_bool,
                         settings => {
                         settings.Name = "ESRetenFTE_bool";
                         settings.Checked = false;
                         settings.Text = "Es retención a la fuente";
                         }
                     ).GetHtml()
                    @Html.DevExpress().CheckBoxFor( q=>q.ESRetenIVA_bool,
                         settings => {
                         settings.Name = "ESRetenIVA_bool";
                         settings.Checked = false;
                         settings.Text = "Es retención al I.V.A.";
                         }
                     ).GetHtml()
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @Html.DevExpress().CheckBoxFor( q=>q.EsTarjetaCredito,
                         settings => {
                         settings.Name = "EsTarjetaCredito";
                         settings.Checked = false;
                         settings.Text = "Es tarjeta de crédito";
                         }
                     ).GetHtml()
                    @Html.DevExpress().CheckBoxFor( q=>q.SeDeposita,
                         settings => {
                         settings.Name = "SeDeposita";
                         settings.Checked = false;
                         settings.Text = "Se deposita";
                         }
                     ).GetHtml()
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="PorcentajeRet">Porcentaje retención</label>
                    @Html.TextBoxFor(q => q.PorcentajeRet, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.PorcentajeRet, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ValorDescuento">Porcentaje descuento al facturar</label>
                    @Html.TextBoxFor(q => q.PorcentajeDescuento, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.PorcentajeDescuento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_tipo_param")
                </div>
            </div>
        </div>
    </div>


    <div class="box-footer">
        <a class="btn btn-default" href="@Url.Action("Index","TipoCobro", new { Area = "CuentasPorCobrar"  },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script type="text/javascript">
    $(function () {
        MostrarBotonesAccion();
    });

    function MostrarBotonesAccion() {
        if ($("#Nuevo").val() == 1)
        {
            $("#btnNuevo").show();
        }
        if ($("#Modificar").val() == 1)
        {
            $("#btnModificar").show();
        }
        if ($("#Anular").val() == 1)
        {
            $("#btnAnular").show();
        }
    }
</script>