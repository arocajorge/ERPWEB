@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_tipo_param";
        settings.CallbackRouteValues = new { Controller = "TipoCobro", Action = "GridViewPartial_tipo_param", IdSucursal = Model == null ? 0 : Model.IdSucursal, IdCobro_tipo = Model == null ? "" : Model.IdCobro_tipo };

        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdSucursal";
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "TipoCobro", Action = "EditingAddNew", Area = "CuentasPorCobrar" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "TipoCobro", Action = "EditingUpdate", Area = "CuentasPorCobrar" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "TipoCobro", Action = "EditingDelete", Area = "CuentasPorCobrar" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdSucursal"] = 0;
            e.NewValues["IdCtaCble"] = "";
        };
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdSucursal";
            column.Caption = "Sucursal";
            column.Width = Unit.Percentage(50);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("Su_Descripcion", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "Su_Descripcion";
                p.ValueField = "IdSucursal";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.lst_sucursal;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCtaCble";
            column.Caption = "Cuenta";
            column.Width = Unit.Percentage(50);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("IdCtaCble", "ID").Width = Unit.Percentage(20);
                p.Columns.Add("pc_Cuenta", "Cuenta").Width = Unit.Percentage(80);
                p.TextField = "pc_Cuenta";
                p.TextField = "IdCtaCble";
                p.ValueField = "IdCtaCble";
                p.ValueType = typeof(string);
                p.DataSource = ViewBag.lst_cta;
            });
        });
    });
}
@grid.Bind(Model.Lst_tipo_param_det).GetHtml()