@model Core.Erp.Info.CuentasPorCobrar.cxc_LiquidacionTarjeta_Info
@{
    ViewBag.Title = "Nueva liquidación de tarjeta de crédito";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    $(function () {
        $("#CobrosModal").modal("hide");

        $("#IdSucursal").change(function () {
            GetListBancoPorSucursal();
        });
    });
    var selectedIDs;
    function OnBeginCallback(s, e) {
        e.customArgs["selectedIDs"] = selectedIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }

    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdCobro", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }
    function MostrarModal() {        
        selectedIDs = "";
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetCobrosPendientes", "LiquidacionTarjetaCredito",new { Area = "CuentasPorCobrar"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_CobrosPendientesLiquidacion.PerformCallback();
                GridViewPartial_CobrosPendientesLiquidacion.UnselectRows();
                $("#CobrosModal").modal("show");
            },
            error: function (error) {
            }
        });

    }

    function GetListBancoPorSucursal() {
        $("#IdBanco").empty();
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListBancoPorSucursal", "BancoCuenta",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBanco").append("<option value=" + row.IdBanco + ">" + row.ba_descripcion+ "</option>");
                });
            },
            error: function (error) {
            }
        });
    }

    function Add() {
        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("EditingAddNew", "LiquidacionTarjetaCredito",new { Area = "CuentasPorCobrar"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            },
            error: function (error) {
            }
        });
        selectedIDs = "";
        GridViewPartial_CobrosPendientesLiquidacion.PerformCallback();
        GridViewPartial_CobrosPendientesLiquidacion.UnselectRows();
        GridViewPartial_CobrosLiquidacion.PerformCallback();
        $("#CobrosModal").modal("hide");
    }
</script>
@using (Html.BeginForm("Nuevo", "LiquidacionTarjetaCredito", FormMethod.Post, new { @class = "form", @role = "form", @id="PostForm" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }

    <div class="modal fade" id="CobrosModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Cobros Pendientes</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_CobrosPendientesLiquidacion")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="Add();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal:*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="IdBanco">Cuenta bancaria:*</label>
                    @Html.DropDownListFor(q => q.IdBanco, new SelectList(ViewBag.lst_banco_cuenta, "IdBanco", "ba_descripcion"), new { @class = "form-control", @id = "IdBanco" })
                    @Html.ValidationMessageFor(q => q.IdBanco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Lote">Lote:</label>
                    @Html.TextBoxFor(q=> q.Lote, new { @id = "Lote", @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Lote, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-1 col-md-2">
                <div class="form-group">
                    <label for="cb_Fecha">Fecha:*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.Fecha, settings =>
                   {
                       settings.Name = "Fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cb_Observacion">Observación</label>
                    @Html.TextAreaFor(q => q.Observacion, new { @id = "cb_Observacion", @class = "form-control", @rows = 2 })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_cobros_pendientes" aria-controls="vales" role="tab" data-toggle="tab">Cobros</a>
            </li>
            <li>
                <a href="#tab_motivos_liquidacion" aria-controls="vales" role="tab" data-toggle="tab">Motivos</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_cobros_pendientes">
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-primary" id="btn_buscar_cobrospendientes" onclick="MostrarModal();">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
                <br />
                @Html.Action("GridViewPartial_CobrosLiquidacion")
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_motivos_liquidacion">
                @Html.Action("GridViewPartial_MotivosLiquidacion")
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "LiquidacionTarjetaCredito", new { Area = "CuentasPorCobrar" }, null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
