@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_orden_servicio_det";
        settings.CallbackRouteValues = new { Controller = "OrdenServicio", Action = "GridViewPartial_orden_servicio_det" };
        settings.KeyFieldName = "Secuencia";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "OrdenServicio", Action = "EditingAddNew", Area = "Compras" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "OrdenServicio", Action = "EditingUpdate", Area = "Compras" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "OrdenServicio", Action = "EditingDelete", Area = "Compras" };

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdProducto"] = "";
            e.NewValues["IdUnidadMedida"] = "UNID";
            e.NewValues["IdCod_Impuesto"] = "";
            e.NewValues["do_Cantidad"] = "1";
            e.NewValues["do_porc_des"] = "0";
        };
        settings.Columns.Add(column =>
        {
            column.Caption = "*";
            column.FieldName = "Secuencia";
            column.Width = Unit.Percentage(5);
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "pr_descripcion";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdProducto";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(20);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                ViewContext.Writer.Write("<div id='ajaxDiv'>");
                Html.RenderPartial("_CmbProducto_OS", DataBinder.Eval(c.DataItem, "IdProducto"));
                ViewContext.Writer.Write("</div>");
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdUnidadMedida";
            column.Caption = "U. de medida";
            column.Width = Unit.Percentage(8);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("descripcion", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "descripcion";
                p.ValueField = "IdUnidadMedida";
                p.ValueType = typeof(string);
                p.DataSource = new Core.Erp.Bus.Inventario.in_UnidadMedida_Bus().get_list(false);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_Cantidad";
            column.Caption = "cantidad";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(8);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_precioCompra";
            column.Caption = "Precio";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(7);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
            });
            column.EditFormSettings.Visible = DefaultBoolean.True;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_porc_des";
            column.Caption = "% Desc. uni.";
            column.Width = Unit.Percentage(8);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
            });
            column.EditFormSettings.Visible = DefaultBoolean.True;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCod_Impuesto";
            column.Caption = "Impuesto";
            column.Width = Unit.Percentage(8);
            column.Visible = false;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("nom_impuesto", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "nom_impuesto";
                p.ValueField = "IdCod_Impuesto";
                p.ValueType = typeof(string);
                p.DataSource = ViewBag.lst_impuesto;
                p.DataSource = new Core.Erp.Bus.General.tb_sis_Impuesto_Bus().get_list("IVA", false);

            });
            column.EditFormSettings.Visible = DefaultBoolean.True;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_precioFinal";
            column.Caption = "Precio final";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(8);
            column.EditFormSettings.Visible = DefaultBoolean.False;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_subtotal";
            column.Caption = "Subtotal";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(8);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_iva";
            column.Caption = "I.V.A.";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(8);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "do_total";
            column.Caption = "Total";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(8);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.SettingsBehavior.AllowSort = false;
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
        settings.ClientSideEvents.EndCallback = "function(s,e){ if (s.IsEditing()) {var editor = IdProducto;editor.Focus();}}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "do_subtotal").DisplayFormat = "{0:n2}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "do_iva").DisplayFormat = "{0:n2}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "do_total").DisplayFormat = "{0:n2}";
        settings.Settings.ShowFooter = true;


    });
}
@grid.Bind(Model).GetHtml()