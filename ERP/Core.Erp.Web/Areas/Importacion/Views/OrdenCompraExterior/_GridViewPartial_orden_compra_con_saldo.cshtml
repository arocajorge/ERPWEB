@using System.Web.UI.WebControls;

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_orden_compra_con_saldo";
        settings.CallbackRouteValues = new { Controller = "OrdenCompraExterior", Action = "GridViewPartial_orden_compra_con_saldo" };
        settings.KeyFieldName = "IdOrdenCompra_ext";
        settings.Width = Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        //Configuracion exportacion
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
       
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };
        //Evento para pintar de rojo las filas anuladas
        settings.HtmlRowPrepared = (s, e) =>
        {
            if (Convert.ToBoolean(e.GetValue("estado")) == false)
            {
                e.Row.ForeColor = System.Drawing.Color.Red;
            }
            if(Convert.ToBoolean(e.GetValue("cantidad_global"))!= Convert.ToBoolean(e.GetValue("cantidad_x_recibir")))
            {
                e.Row.ForeColor = System.Drawing.Color.Blue;

            }
        };
       
        settings.Columns.Add("IdOrdenCompra_ext", "ID").Width = Unit.Percentage(5);
        settings.Columns.Add("pe_cedulaRuc", "Cédula/Ruc").Width = Unit.Percentage(10);
        settings.Columns.Add("pe_nombreCompleto", "Proveedor").Width = Unit.Percentage(30);
        settings.Columns.Add(column =>
        {
            column.FieldName = "oe_fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Percentage(10);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add("oe_observacion", "Obaservación").Width = Unit.Percentage(30);

        settings.Columns.Add(column =>
        {
            column.Caption = "Registrar";
            column.Width = Unit.Pixel(100);
            column.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().HyperLink(hyperlink =>
                {
                    var IdOrdenCompra_ext = DataBinder.Eval(container.DataItem, "IdOrdenCompra_ext");
                    hyperlink.Properties.Text = "Mercaderia";
                    hyperlink.NavigateUrl = Url.Action("Nuevo", "RecepcionOrdenCompra", new { Area = "Importacion", IdOrdenCompra_ext = IdOrdenCompra_ext });
                }).Render();
            });
        });

    });
}
@grid.Bind(Model).GetHtml()