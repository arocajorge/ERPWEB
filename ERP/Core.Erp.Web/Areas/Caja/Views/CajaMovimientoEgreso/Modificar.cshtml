@model Core.Erp.Info.Caja.caj_Caja_Movimiento_Info
@{
    ViewBag.Title = ("Modificar egreso" + " con ID #" + @Model.IdCbteCble);
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script src="~/Scripts/ScriptsGenerales.js"></script>

<script>
    function AddOP() {
        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("EditingAddNew", "CajaMovimientoEgreso",new { Area = "Caja"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#cr_Valor").val(data.Valor);
                $("#cm_observacion").val(data.Observacion);
            },
            error: function (error) {
            }
        });
        selectedIDs = "";
        GridView_egreso_op_x_cruzar.PerformCallback();
        GridView_egreso_op_x_cruzar.UnselectRows();
        GridView_egreso_op.PerformCallback();
        $("#OpModal").modal("hide");
    }

    var selectedIDs;
    function OnBeginCallback(s, e) {
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdOrdenPago_op", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    function MostrarModal() {
        selectedIDs = "";

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdTipoPersona: $("#IdTipoPersona").val(),
            IdEntidad: IdEntidad.GetValue(),
            IdCaja: $("#IdCaja").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListPorCruzar", "CajaMovimientoEgreso",new { Area = "Caja"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_egreso_op_x_cruzar.PerformCallback();
                GridView_egreso_op_x_cruzar.UnselectRows();
                $("#OpModal").modal("show");
            },
            error: function (error) {
            }
        });
    }

    function armar_diario() {
        var caja = $("#IdCaja").val();
        var tipo_movimiento = IdTipoMovi.GetValue();
        var monto = $("#cr_Valor").val();

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdCaja: caja,
            IdTipoMovi: tipo_movimiento,
            valor: monto,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("armar_diario", "CajaMovimientoEgreso", new { Area = "Caja" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.EsOp == "S") {
                    $("#cr_Valor").val(data.Valor)
                }
                GridView_comprobante_detalle.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
</script>
@using (Html.BeginForm("Modificar", "CajaMovimientoEgreso", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdCbteCble)
    @Html.HiddenFor(q => q.IdTipocbte)
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }

    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    <div class="modal fade" id="OpModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ordenes de pago</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_egreso_op_x_cruzar")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="AddOP();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="CodMoviCaja">Código</label>
                    @Html.TextBoxFor(q => q.CodMoviCaja, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodMoviCaja, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-5 col-md-2">
                <div class="form-group">
                    <label for="">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.cm_fecha, settings =>
                    {
                        settings.Name = "cm_fecha";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.cm_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <label for="IdImprimir"></label>
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" id="btn_imprimir" onclick="Imprimir();" title="Imprimir">
                        <i class="fa fa-print"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <label for="IdNuevo"></label>
                <div class="form-group">
                    <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","CajaMovimientoEgreso",new { Area = "Caja", IdEmpresa = Model.IdEmpresa },null)">
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdCaja">Caja*</label>
                    @Html.DropDownListFor(q => q.IdCaja, new SelectList(ViewBag.lst_caja, "IdCaja", "ca_Descripcion"), new { @class = "form-control", @id = "IdCaja", })
                    @Html.ValidationMessageFor(q => q.IdCaja, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdTipoMovi">Tipo movimiento*</label>
                    @Html.Partial("_CmbTipoMovimiento_Egreso", Model.IdTipoMovi)
                    @Html.ValidationMessageFor(q => q.IdTipoMovi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="info_caj_Caja_Movimiento_det.IdCobro_tipo">Tipo cobro</label>
                    @Html.DropDownListFor(q => q.info_caj_Caja_Movimiento_det.IdCobro_tipo, new SelectList(ViewBag.lst_cobro, "IdCobro_tipo", "tc_descripcion"), new { @class = "form-control", @id = "IdCobro_tipo" })
                    @Html.ValidationMessageFor(q => q.info_caj_Caja_Movimiento_det.IdCobro_tipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="info_caj_Caja_Movimiento_det.cr_Valor">Valor</label>
                    @Html.TextBoxFor(q => q.info_caj_Caja_Movimiento_det.cr_Valor, new { @class = "form-control", @id = "cr_Valor" })
                    @Html.ValidationMessageFor(q => q.info_caj_Caja_Movimiento_det.cr_Valor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdTipoPersona">Tipo persona*</label>
                    @Html.DropDownListFor(q => q.IdTipo_Persona, new SelectList(ViewBag.lst_tipo_personas, "Key", "Value"), new { @class = "form-control", @id = "IdTipoPersona" })
                </div>
            </div>
            <div class="col-md-9">
                <div class="form-group">
                    <label for="IdEntidad">Beneficiario*</label>
                    @Html.Partial("_CmbPersona_MovimientoEgreso", Model.IdEntidad)
                    @Html.ValidationMessageFor(q => q.IdEntidad, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cm_observacion">Observación</label>
                    @Html.TextAreaFor(q => q.cm_observacion, new { @class = "form-control", @id = "cm_observacion" })
                    @Html.ValidationMessageFor(q => q.cm_observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_cheque" aria-controls="facturas" role="tab" data-toggle="tab">Diario contable</a>
            </li>
            <li>
                <a href="#tab_op" aria-controls="vales" role="tab" data-toggle="tab">Ordenes de pago</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_cheque">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_comprobante_detalle", new { Area = "Contabilidad", Controller = "ComprobanteContable" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_op">
                <div class="row">
                    <div class="col-md-1">
                        <button type="button" class="btn btn-primary form-control" id="btn_buscar_op" onclick="MostrarModal();" title="Buscar órdenes">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
                <br />
                @Html.Action("GridViewPartial_egreso_op")
            </div>
        </div>

    </div>

    
        <div class="box-footer">
                @if (ViewBag.MostrarBoton ?? false)
                {
                    <button type="submit" class="btn btn-primary">Guardar</button>
                } 
            <a class="btn btn-default" href="@Url.Action("Index", "CajaMovimientoEgreso", new { Area = "Caja" }, null)">Cancelar</a>
        </div>
    
    
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script>
    $("#IdTipoPersona").change(function () {
        IdEntidad.SetValue(null);
    });

   $("#IdCaja").change(function () {
    armar_diario();
    });

    $("#IdTipoMovi").change(function () {
        armar_diario();
    });

    $("#cr_Valor").change(function () {
        armar_diario();
    });

    function armar_diario() {
                        var caja = $("#IdCaja").val();
                        var tipo_movimiento = IdTipoMovi.GetValue();
                        var monto = $("#cr_Valor").val();

                        var datos = {
                            IdEmpresa: $("#IdEmpresa").val(),
                            IdCaja: caja,
                            IdTipoMovi: tipo_movimiento,
                            valor: monto,
                            IdTransaccionSession: $("#IdTransaccionSession").val()
                        }
                        $.ajax({
                            type: 'POST',
                            data: JSON.stringify(datos),
                            url: '@Url.Action("armar_diario", "CajaMovimientoEgreso", new { Area = "Caja" })',
                            async: false,
                            bDeferRender: true,
                            bProcessing: true,
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data.EsOp == "S") {
                                    $("#cr_Valor").val(data.Valor)
                                }
                                GridView_comprobante_detalle.PerformCallback();
                            },
                            error: function (error) {
                            }
                        });
                    }

    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/CajaReportes/CAJ_001?IdEmpresa="+@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdTipocbte="+@Model.IdTipocbte+"&IdCbteCble="+@Model.IdCbteCble, '_blank');
        win.focus();
    }

    function OnSelectedCtaCbleChanged() {
        GridView_comprobante_detalle.GetEditor("IdGrupoPresupuesto").PerformCallback();
    }
    function GrupoComboBox_BeginCallback(s, e) {
        e.customArgs["pre_IdCtaCble"] = IdCtaCble.GetValue();
        e.customArgs["pre_fecha"] = moment(cm_fecha.GetDate()).format('DD/MM/YYYY');
    }
</script>
