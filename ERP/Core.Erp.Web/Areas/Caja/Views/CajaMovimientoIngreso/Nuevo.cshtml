@model Core.Erp.Info.Caja.caj_Caja_Movimiento_Info
@{
    ViewBag.Title = "Nuevo ingreso";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    function armar_diario() {
        var caja = $("#IdCaja").val();
        var tipo_movimiento = IdTipoMovi.GetValue();
        var monto = $("#cr_Valor").val();

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdCaja: caja,
            IdTipoMovi: tipo_movimiento,
            valor: monto,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("armar_diario", "CajaMovimientoIngreso", new { Area = "Caja" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_comprobante_detalle.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
</script>
@using (Html.BeginForm("Nuevo", "CajaMovimientoIngreso", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdCbteCble)
    @Html.HiddenFor(q => q.IdTipocbte)
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="CodMoviCaja">Código</label>
                    @Html.TextBoxFor(q => q.CodMoviCaja, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodMoviCaja, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-7 col-md-2">
                <div class="form-group">
                    <label for="">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.cm_fecha, settings =>
                        {
                            settings.Name = "cm_fecha";
                            settings.Properties.UseMaskBehavior = true;
                            settings.Properties.EditFormat = EditFormat.Date;
                            settings.Properties.EditFormatString = "dd/MM/yyyy";
                            settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        }).GetHtml()
                        @Html.ValidationMessageFor(q => q.cm_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdCaja">Caja*</label>
                    @Html.DropDownListFor(q => q.IdCaja, new SelectList(ViewBag.lst_caja, "IdCaja", "ca_Descripcion"), new { @class = "form-control", @id = "IdCaja" })
                    @Html.ValidationMessageFor(q => q.IdCaja, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdTipoMovi">Tipo movimiento*</label>
                    @Html.Partial("_CmbTipoMovimiento_Ingreso", Model.IdTipoMovi)
                    @Html.ValidationMessageFor(q => q.IdTipoMovi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="info_caj_Caja_Movimiento_det.IdCobro_tipo">Tipo cobro</label>
                    @Html.DropDownListFor(q => q.info_caj_Caja_Movimiento_det.IdCobro_tipo, new SelectList(ViewBag.lst_cobro, "IdCobro_tipo", "tc_descripcion"), new { @class = "form-control", @id = "IdCobro_tipo" })
                    @Html.ValidationMessageFor(q => q.info_caj_Caja_Movimiento_det.IdCobro_tipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="info_caj_Caja_Movimiento_det.cr_Valor">Valor</label>
                    @Html.TextBoxFor(q => q.info_caj_Caja_Movimiento_det.cr_Valor, new { @class = "form-control", @id = "cr_Valor" })
                    @Html.ValidationMessageFor(q => q.info_caj_Caja_Movimiento_det.cr_Valor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdTipoPersona">Tipo persona*</label>
                    @Html.DropDownListFor(q => q.IdTipo_Persona, new SelectList(ViewBag.lst_tipo_personas, "Key", "Value"), new { @class = "form-control", @id = "IdTipoPersona" })
                </div>
            </div>
            <div class="col-md-9">
                <div class="form-group">
                    <label for="IdEntidad">Beneficiario*</label>
                    @Html.Partial("_CmbPersona_MovimientoIngreso", Model.IdEntidad)
                    @Html.ValidationMessageFor(q => q.IdEntidad, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cm_observacion">Observación</label>
                    @Html.TextAreaFor(q => q.cm_observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.cm_observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Action("GridViewPartial_comprobante_detalle", new { Area = "Contabilidad", Controller = "ComprobanteContable" })
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "CajaMovimientoIngreso", new { Area = "Caja" }, null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script>
    $("#IdTipoPersona").change(function () {
        IdEntidad.SetValue(null);
    });

    $("#IdCaja").change(function () {
        armar_diario();
    });

    $("#cr_Valor").change(function () {
        armar_diario();
    });

    function armar_diario() {
        var caja = $("#IdCaja").val();
        var tipo_movimiento = IdTipoMovi.GetValue();
        var monto = $("#cr_Valor").val();

        var datos = {
            IdEmpresa : $("#IdEmpresa").val(),
            IdCaja: caja,
            IdTipoMovi: tipo_movimiento,
            valor: monto,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("armar_diario", "CajaMovimientoIngreso", new { Area = "Caja" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_comprobante_detalle.PerformCallback();
            },
            error: function (error) {
            }
        });
    }

    function OnSelectedCtaCbleChanged() {
        GridView_comprobante_detalle.GetEditor("IdGrupoPresupuesto").PerformCallback();
    }
    function GrupoComboBox_BeginCallback(s, e) {
        e.customArgs["pre_IdCtaCble"] = IdCtaCble.GetValue();
        e.customArgs["pre_fecha"] = moment(cm_fecha.GetDate()).format('DD/MM/YYYY');
    }
</script>
