@using System.Web.UI.WebControls;
@model Core.Erp.Info.Caja.cp_conciliacion_Caja_Info
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_conciliacion_vales";
        settings.CallbackRouteValues = new { Controller = "ConciliacionCaja", Action = "GridViewPartial_conciliacion_vales", Area = "Caja" };
        settings.KeyFieldName = "Secuencia";
        settings.Width = Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ConciliacionCaja", Action = "EditingAddNewVale", Area = "Caja" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ConciliacionCaja", Action = "EditingUpdateVale", Area = "Caja" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ConciliacionCaja", Action = "EditingDeleteVale", Area = "Caja" };

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = false;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdPersona"] = 0;
            e.NewValues["fecha"] = DateTime.Now.Date;
            e.NewValues["Observacion"] = string.Empty;
            e.NewValues["IdTipoMovi"] = null;
            e.NewValues["valor"] = 0;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_nombreCompleto";
            column.Caption = "Beneficiario";
            column.VisibleIndex = 1;
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdPersona";
            column.Caption = "Beneficiario";
            column.Width = Unit.Percentage(20);
            column.Visible = false;
            column.VisibleIndex = 1;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_ComboBoxPartial_persona", DataBinder.Eval(c.DataItem, "IdPersona"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Percentage(10);
            column.VisibleIndex = 2;
            column.EditorProperties().DateEdit(p =>
            {
                p.Width = Unit.Percentage(100);
                p.DisplayFormatString = "dd/MM/yyyy";
                p.EditFormatString = "dd/MM/yyyy";
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "idTipoMovi";
            column.Caption = "Tipo";
            column.VisibleIndex = 3;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().ComboBox(p =>
            {
                p.Width = Unit.Percentage(100);
                p.ValueField = "IdTipoMovi";
                p.TextField = "tm_descripcion";
                p.DropDownStyle = DropDownStyle.DropDownList;
                p.DropDownWidth = Unit.Pixel(1000);
                p.ValueType = typeof(int);
                p.BindList(new Core.Erp.Bus.Caja.caj_Caja_Movimiento_Tipo_Bus().get_list(Convert.ToInt32(Core.Erp.Web.Helps.SessionFixed.IdEmpresa),"-", false,false));
                p.Columns.Add("tm_descripcion", "Tipo").Width = Unit.Percentage(80);
                p.Columns.Add("IdCtaCble", "Cuenta").Width = Unit.Percentage(20);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "valor";
            column.Caption = "Valor";
            column.VisibleIndex = 4;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(p =>
            {
                p.Width = Unit.Percentage(100);
                p.MinValue = 0;
                p.NumberFormat = SpinEditNumberFormat.Number;
                p.DisplayFormatString = "{0:N2}";
            });
            column.PropertiesEdit.DisplayFormatString = "{0:N2}";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCentroCosto_vales";
            column.Caption = "Centro de costo";
            column.Width = Unit.Percentage(10);
            column.Visible = false;
            column.VisibleIndex = 5;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbCentroCosto_ConciliacionCaja", DataBinder.Eval(c.DataItem, "IdCentroCosto_vales"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "cc_Descripcion";
            column.Caption = "Centro de costo";
            column.VisibleIndex = 5;
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdPunto_cargo_grupo_vales";
            column.Caption = "Grupo";
            column.VisibleIndex = 6;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().ComboBox(p =>
            {

                p.Columns.Add("IdPunto_cargo_grupo", "ID").Width = Unit.Percentage(10);
                p.Columns.Add("nom_punto_cargo_grupo", "Descripción").Width = Unit.Percentage(50);
                p.ValueField = "IdPunto_cargo_grupo";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.lst_punto_cargo_grupo;
                p.Width = Unit.Percentage(100);
                p.ClientSideEvents.SelectedIndexChanged = "OnSelectedGrupoPuntoCargoValesChanged";
                p.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdPunto_cargo_vales";
            column.Caption = "Punto de cargo";
            column.Width = Unit.Percentage(10);
            column.Visible = false;
            column.VisibleIndex = 7;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbPuntoCargoConciliacion", DataBinder.Eval(c.DataItem, "IdPunto_cargo_vales"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "nom_punto_cargo";
            column.Caption = "Punto de cargo";
            column.VisibleIndex = 7;
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Observacion";
            column.Caption = "Observación";
            column.VisibleIndex = 8;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().Memo(p =>
            {
                p.Width = Unit.Percentage(100);
            });
        });


        settings.Settings.ShowFooter = true;
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "valor").DisplayFormat = "Total {0:n2}";
        settings.ClientSideEvents.EndCallback = "Calcular";
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model.lst_det_vale).GetHtml()

<script>
    function OnSelectedGrupoPuntoCargoValesChanged() {
        IdPunto_cargo_vales.PerformCallback();
    }
    function PuntoCargoValesComboBox_BeginCallback(s, e) {
        e.customArgs["fx_IdPunto_cargo_grupo_vales"] = GridView_conciliacion_vales.GetEditor("IdPunto_cargo_grupo_vales").GetValue();
    }
</script>