

@{
    var treeList = Html.DevExpress().TreeList(settings => {
        settings.Name = "TreeList_menu_x_usuario";
        settings.CallbackRouteValues = new { Controller = "MenuPorEmpresaPorUsuario", Action = "TreeListPartial_menu_x_usuario", IdEmpresa = ViewBag.IdEmpresa, IdUsuario = ViewBag.IdUsuario };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.KeyFieldName = "IdMenu";
        settings.ParentFieldName = "IdMenuPadre";

        settings.SettingsEditing.UpdateNodeRouteValues = new { Controller = "MenuPorEmpresaPorUsuario", Action = "EditingUpdate", Area = "SeguridadAcceso" };
        settings.SettingsEditing.Mode = TreeListEditMode.EditFormAndDisplayNode;
        settings.SettingsEditing.ConfirmDelete = true;
        settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Both;
        settings.SettingsBehavior.ExpandCollapseAction = TreeListExpandCollapseAction.NodeDblClick;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.NewButton.Visible = false;
        settings.CommandColumn.DeleteButton.Visible = false;
        settings.CommandColumn.EditButton.Visible = true;
        
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdMenu";
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(5);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "*";
            column.FieldName = "seleccionado";
            column.ColumnType = MVCxTreeListColumnType.CheckBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(5);
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Menú";
            column.FieldName = "DescripcionMenu";
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(80);
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Lectura";
            column.FieldName = "Lectura";
            column.ColumnType = MVCxTreeListColumnType.CheckBox;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(10);
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Escritura";
            column.FieldName = "Escritura";
            column.ColumnType = MVCxTreeListColumnType.CheckBox;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(10);
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Anulación";
            column.FieldName = "Eliminacion";
            column.ColumnType = MVCxTreeListColumnType.CheckBox;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(10);
        });

        settings.SettingsCookies.StoreSelection = true;
        settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Both;
        settings.SettingsPager.Visible = true;
        settings.SettingsSelection.Enabled = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsSelection.Recursive = true;
        settings.SettingsSelection.AllowSelectAll = true;
        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.DataBound = (s, e) =>
        {
            MVCxTreeList tree = s as MVCxTreeList;
            string bId = ViewData["selectedIDs"] == null ? "" : ViewData["selectedIDs"].ToString();//I have a bId truly
            if (tree.Nodes.Count == 0) return;
            if (tree.Nodes[0] == null) return;
            if (string.IsNullOrEmpty(bId))
                return;
            TreeListNodeIterator iterator = tree.CreateNodeIterator();
            TreeListNode node = iterator.Current;
            tree.SelectAll();
            string[] array = ViewData["selectedIDs"].ToString().Split(',');
            int index = 0;
            while (node != null)
            {
                if (node["IdMenu"] != null)
                {
                    if (!string.IsNullOrEmpty(array.FirstOrDefault(q => q == node["IdMenu"].ToString())))
                    {
                        node.Selected = Convert.ToBoolean(node["seleccionado"]);
                    }
                    else
                        node.Selected = false;
                }

                index++;
                node = iterator.GetNext();
            }
        };
    });
}
@treeList.Bind(Model).GetHtml()

