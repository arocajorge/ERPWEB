@using System.Web.UI.WebControls;
@model Core.Erp.Info.Contabilidad.ct_cbtecble_Info
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_comprobante_detalle";
        settings.CallbackRouteValues = new { Controller = "ComprobanteContable", Action = "GridViewPartial_comprobante_detalle", Area = "Contabilidad", IdTipoCbte = Model == null ? 0 : Model.IdTipoCbte , IdCbteCble = Model == null ? 0 : Model.IdCbteCble };
        settings.KeyFieldName = "secuencia";
        settings.Width = Unit.Percentage(100);
        settings.CommandColumn.ShowNewButtonInHeader = true;

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ComprobanteContable", Action = "EditingAddNew", Area = "Contabilidad" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ComprobanteContable", Action = "EditingUpdate", Area = "Contabilidad" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ComprobanteContable", Action = "EditingDelete", Area = "Contabilidad" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.Settings.ShowFooter = true;
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["dc_Valor_haber"] = 0;
            e.NewValues["dc_Valor_debe"] = 0;
            //e.NewValues["IdCtaCble"] = null;
            e.NewValues["IdGrupoPresupuesto"] = null;

        };
        settings.Columns.Add(column =>
        {
            column.FieldName = "pc_Cuenta";
            column.Caption = "Cuenta";
            column.Width = Unit.Percentage(25);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCtaCble";
            column.Caption = "Cuenta";
            column.Width = Unit.Percentage(25);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbCuenta_comprobante_contable", DataBinder.Eval(c.DataItem, "IdCtaCble"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_Valor_debe";
            column.Caption = "Debe";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.AllowMouseWheel = false;
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_Valor_haber";
            column.Caption = "Haber";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.AllowMouseWheel = false;
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCentroCosto";
            column.Caption = "Centro de costo";
            column.Width = Unit.Percentage(10);
            column.Visible = false;
            column.VisibleIndex = 7;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbCentroCosto_Conta", DataBinder.Eval(c.DataItem, "IdCentroCosto"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "cc_Descripcion";
            column.Caption = "Centro de costo";
            column.Width = Unit.Percentage(15);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdPunto_cargo_grupo";
            column.Caption = "Grupo punto de cargo";
            column.Width = Unit.Percentage(15);
            column.EditorProperties().ComboBox(p =>
            {

                p.Columns.Add("IdPunto_cargo_grupo", "ID").Width = Unit.Percentage(10);
                p.Columns.Add("nom_punto_cargo_grupo", "Descripción").Width = Unit.Percentage(50);
                p.ValueField = "IdPunto_cargo_grupo";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.lst_punto_cargo_grupo;
                p.Width = Unit.Percentage(100);
                p.ClientSideEvents.SelectedIndexChanged = "OnSelectedGrupoPuntoCargoChanged";
                p.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdPunto_cargo";
            column.Caption = "Punto de cargo";
            column.Width = Unit.Percentage(15);
            column.Visible = false;
            column.VisibleIndex = 7;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbPuntoCargo", DataBinder.Eval(c.DataItem, "IdPunto_cargo"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "nom_punto_cargo";
            column.Caption = "Punto de cargo";
            column.Width = Unit.Percentage(15);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_debe").DisplayFormat = "Debe {0:c2}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_Valor_haber").DisplayFormat = "Haber {0:c2}";

        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
        settings.ClientSideEvents.EndCallback = "function(s,e){if (s.IsEditing()) {var editor = IdCtaCble;editor.Focus();}}";

    });

}
@grid.Bind(Model.lst_ct_cbtecble_det).GetHtml()

<script>
    function OnSelectedGrupoPuntoCargoChanged() {
        IdPunto_cargo.PerformCallback();
    }
    function PuntoCargoComboBox_BeginCallback(s, e) {
        e.customArgs["fx_IdPunto_cargo_grupo"] = GridView_comprobante_detalle.GetEditor("IdPunto_cargo_grupo").GetValue();
    }
</script>