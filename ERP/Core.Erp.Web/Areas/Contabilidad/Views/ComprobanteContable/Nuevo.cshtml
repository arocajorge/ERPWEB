@model Core.Erp.Info.Contabilidad.ct_cbtecble_Info
@{
    ViewBag.Title = "Nuevo comprobante contable";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script type="text/javascript">
    function OnFileUploadStart(s, e) {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ActualizarVariablesSession", "ComprobanteContable", new { Area = "Contabilidad" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            },
            error: function (error) {
            }
        });
    }

    function OnFileUploadComplete(s, e)
    {
        GridView_comprobante_detalle.PerformCallback();
    }

    function MostrarModalPlantilla() {
        $("#PlantillaModal").modal("show");
    }

    function AgregarPlantilla(IdPlantilla) {
        var datos = {
            IdPlantilla: IdPlantilla,
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_PlantillaComprobante", "PlantillaComprobanteContable", new { Area = "Contabilidad"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                IdTipoCbte.SetValue(data.IdTipoCbte);
                $("#cb_Observacion").val(data.cb_Observacion);
                GridView_comprobante_detalle.PerformCallback();
            },
            error: function (error) {
            }
        });

        $("#PlantillaModal").modal("hide");

    }
</script>
@using (Html.BeginForm("Nuevo", "ComprobanteContable", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }

    <div class="modal fade" id="PlantillaModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Plantilla comprobante contable</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_ComprobanteContablePlantilla_Asignar", new { Area = "Contabilidad", Controller = "PlantillaComprobanteContable" })
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="CodCbteCble">Código</label>
                    @Html.TextBoxFor(q => q.CodCbteCble, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodCbteCble, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    <div class="form-group">
                        @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                        @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <label for="IdTipoCbte">Tipo comprobante</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdTipoCbte, settings =>
               {
                   settings.Name = "IdTipoCbte";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdTipoCbte", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("tc_TipoCbte", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(90);
                   //Campo ID
                   settings.Properties.ValueField = "IdTipoCbte";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "tc_TipoCbte";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
               }).BindList(ViewBag.lst_tipo_comprobante).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdTipoCbte, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="">Fecha de comprobante</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.cb_Fecha, settings =>
                    {
                        settings.Name = "cb_Fecha";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.cb_Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="cb_Observacion">Observación*</label>
                    @Html.TextBoxFor(q => q.cb_Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.cb_Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <label for="Descripcion">Importar detalle</label>
                @Html.DevExpress().UploadControl(settings =>
               {
                   settings.Name = "UploadControlFile";
                   settings.CallbackRouteValues = new { Controller = "ComprobanteContable", Action = "UploadControlUpload" };
                   settings.ShowUploadButton = true;
                   settings.ShowProgressPanel = true;
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.NullText = "Selecciona el archivo...";
                   settings.ClientSideEvents.FilesUploadStart = "OnFileUploadStart";
                   settings.ClientSideEvents.FileUploadComplete = "OnFileUploadComplete";
               }).GetHtml()
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <button type="button" class="btn btn-primary" id="btn_buscar_plantilla" onclick="MostrarModalPlantilla();">
                    <i class="fa fa-search" title="Plantilla Tipo de Flujo"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                @Html.Action("GridViewPartial_comprobante_detalle")
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "ComprobanteContable", new { IdTipoCbte = Model.IdTipoCbte, Area = "Contabilidad" }, null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
