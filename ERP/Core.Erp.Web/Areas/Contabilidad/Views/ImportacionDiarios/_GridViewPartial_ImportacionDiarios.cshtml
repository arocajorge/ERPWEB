@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_ImportacionDiarios";
        settings.CallbackRouteValues = new { Controller = "ImportacionDiarios", Action = "GridViewPartial_ImportacionDiarios", tipo_documento = ViewBag.tipo_documento};
        settings.KeyFieldName = "";
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        //Configuración checkbox
        //settings.CommandColumn.Visible = true;
        //settings.CommandColumn.ShowSelectCheckbox = true;
        //settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ImportacionDiarios", Action = "EditingAddNew", Area = "Contabilidad" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ImportacionDiarios", Action = "EditingUpdate", Area = "Contabilidad" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ImportacionDiarios", Action = "EditingDelete", Area = "Contabilidad" };

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;

        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        //Configuracion exportacion
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        settings.Columns.Add("tipo_documento", "Tipo documento").Width = System.Web.UI.WebControls.Unit.Percentage(10);
        settings.Columns.Add(column =>
        {
            column.FieldName = "pc_Cuenta";
            column.Caption = "Cuenta";
            column.Width = Unit.Percentage(25);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCtaCble";
            column.Caption = "Cuenta";
            column.Width = Unit.Percentage(25);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("CmbCuenta", DataBinder.Eval(c.DataItem, "IdCtaCble"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fecha";
            column.Caption = "Fecha";
            column.PropertiesEdit.DisplayFormatString = "{0:dd/MM/yyyy}";
            column.Width = System.Web.UI.WebControls.Unit.Percentage(8);
        });
        settings.Columns.Add("Glosa", "Glosa").Width = System.Web.UI.WebControls.Unit.Percentage(25);
        settings.Columns.Add("Detalle", "Detalle").Width = System.Web.UI.WebControls.Unit.Percentage(15);
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_ValorDebe";
            column.Caption = "Debe";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "dc_ValorHaber";
            column.Caption = "Haber";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";

            });
        });

        //settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        //settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
    });
}
@grid.Bind(Model).GetHtml()