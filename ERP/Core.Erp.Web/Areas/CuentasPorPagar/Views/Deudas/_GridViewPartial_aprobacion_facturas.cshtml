@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_aprobacion_facturas";
        settings.CallbackRouteValues = new { Controller = "Deudas", Action = "GridViewPartial_aprobacion_facturas" };

        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Deudas", Action = "EditingUpdate_og", Area = "CuentasPorPagar" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Deudas", Action = "EditingDelete_og", Area = "CuentasPorPagar" };

        settings.KeyFieldName = "SecuencialID";
        settings.Width = Unit.Percentage(100);

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        //Configuración click derecho
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsContextMenu.EnableRowMenu = DefaultBoolean.True;

        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Columns.Add(column =>
        {
            column.FieldName = "co_factura";
            column.Caption = "Documento";
            column.Width = Unit.Percentage(30);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.ReadOnly = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "info_proveedor.info_persona.pe_nombreCompleto";
            column.Caption = "Proveedor";
            column.Width = Unit.Percentage(40);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.ReadOnly = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "co_fechaOg";
            column.Caption = "Fecha";
            column.Width = Unit.Percentage(10);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.ReadOnly = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "co_FechaFactura_vct";
            column.Caption = "Vence";
            column.Width = Unit.Percentage(10);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
                column.ReadOnly = false;
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Tipo_Vcto";
            column.Caption = "Estado";
            column.Width = Unit.Percentage(5);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Saldo_OG";
            column.Caption = "Saldo";
            column.Width = Unit.Percentage(5);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "co_valorpagar";
            column.Caption = "Valor a pagar";
            column.Width = Unit.Percentage(5);
            column.PropertiesEdit.DisplayFormatString = "{0:N2}";
            column.EditorProperties().SpinEdit(p =>
            {
                p.MinValue = 0;
                p.DisplayFormatInEditMode = true;
                p.DisplayFormatString = "N2";
            });
        });
        settings.ClientSideEvents.EndCallback = "function(s,e){ armar_diario();if (s.IsEditing()) {var editor = s.GetEditor('co_valorpagar');editor.Focus();}}";


    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()