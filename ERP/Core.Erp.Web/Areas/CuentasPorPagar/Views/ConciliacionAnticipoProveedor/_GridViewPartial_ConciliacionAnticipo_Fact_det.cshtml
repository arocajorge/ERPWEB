@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridViewPartial_ConciliacionAnticipo_Fact_det";
        settings.CallbackRouteValues = new { Controller = "ConciliacionAnticipoProveedor", Action = "GridViewPartial_ConciliacionAnticipo_Fact_det", Area = "CuentasPorPagar" };
        settings.KeyFieldName = "Secuencia";
        settings.Width = Unit.Percentage(100);
        settings.CommandColumn.ShowNewButtonInHeader = false;

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ConciliacionAnticipoProveedor", Action = "EditingAddNew_Fact", Area = "CuentasPorPagar" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ConciliacionAnticipoProveedor", Action = "EditingUpdate_Fact", Area = "CuentasPorPagar" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ConciliacionAnticipoProveedor", Action = "EditingDelete_Fact", Area = "CuentasPorPagar" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.Settings.ShowFooter = true;
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["MontoAplicado"] = 0;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdOrdenPago";
            column.Caption = "OP";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "tc_TipoCbte";
            column.Caption = "Tipo de Comprobante";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdCbteCble_cxp";
            column.Caption = "CxP";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "Fecha_cxp";
            column.Caption = "Fecha";
            column.PropertiesEdit.DisplayFormatString = "{0:dd/MM/yyyy}";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Observacion_cxp";
            column.Caption = "Observación";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "MontoAplicado";
            column.Caption = "Monto";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().SpinEdit(p =>
            {
                p.MinValue = 0;
                p.DisplayFormatInEditMode = true;
                p.DisplayFormatString = "N2";
            });
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "MontoAplicado").DisplayFormat = "Monto {0:c2}";


        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
        settings.ClientSideEvents.EndCallback = "function(s,e){ if (s.IsEditing()) {var editor = s.GetEditor('MontoAplicado'); editor.Focus();} armar_diario();}";

    });

}
@grid.Bind(Model).GetHtml()