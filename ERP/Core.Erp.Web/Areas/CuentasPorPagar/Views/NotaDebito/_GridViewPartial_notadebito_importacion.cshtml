@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_notadebito_importacion";
        settings.CallbackRouteValues = new { Controller = "NotaDebito", Action = "GridViewPartial_notadebito_importacion" };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdNota";
        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        //Configuracion exportacion
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };
        settings.HtmlRowPrepared = (s, e) =>
        {
            if (Convert.ToInt32(e.GetValue("IdSucursal")) == 0)
            {
                e.Row.ForeColor = System.Drawing.Color.Red;
            }
        };
        settings.Columns.Add("IdCbteCble_Nota", "Código").Width = Unit.Percentage(10);
        settings.Columns.Add("Nombre_proveedor", "Proveedor").Width = Unit.Percentage(10);

        settings.Columns.Add("IdSucursal", "Sucursal").Width = Unit.Percentage(10);
        settings.Columns.Add("cod_nota", "Documento").Width = Unit.Percentage(10);
        settings.Columns.Add("Fecha_contable", "Fecha Contable").Width = Unit.Percentage(10);
        settings.Columns.Add("cn_Fecha_vcto", "Fecha Vcto").Width = Unit.Percentage(10);
        settings.Columns.Add("cn_total", "Total").Width = Unit.Percentage(10);
        settings.Columns.Add("cn_observacion", "Observacion").Width = Unit.Percentage(30);

        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()