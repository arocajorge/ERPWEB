@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridViewPartial_ordenes_pagos_con_saldo";
        settings.CallbackRouteValues = new { Controller = "NotaCredito", Action = "GridViewPartial_ordenes_pagos_con_saldo" };
        settings.KeyFieldName = "IdOrdenPago";
        settings.Width = Unit.Percentage(100);
        //CConfiguracion responsive


        settings.SettingsPager.Visible = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        //Configuración checkbox
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

        settings.Columns.Add(column =>
        {
            column.Caption = "*";
            column.FieldName = "seleccionado";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(2);
            column.Visible = false;
        });



        settings.Columns.Add("Nom_Beneficiario", "Beneficiario").Width=Unit.Percentage(40);
        //  settings.Columns.Add("Observacion","Observación").Width = Unit.Percentage(30);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fecha_Pago";
            column.Caption = "Fecha pago";
            column.Width = Unit.Percentage(15);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Valor_a_pagar";
            column.Caption = "$Valor a pagar";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total_cancelado_OP";
            column.Caption = "$Valor cancelado";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Saldo_x_Pagar_OP";
            column.Caption = "$Saldo op";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "n2";

            });
        });

        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()