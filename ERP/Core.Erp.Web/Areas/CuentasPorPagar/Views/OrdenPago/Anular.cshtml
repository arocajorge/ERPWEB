@using System.Web.UI.WebControls;

@model Core.Erp.Info.CuentasPorPagar.cp_orden_pago_Info
@{
    ViewBag.Title = "Anular orden";
    if (Session["IdUsuario"] == null || Session["IdEmpresa"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Anular", "OrdenPago", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    @Html.HiddenFor(q => q.IdOrdenPago)
    @Html.HiddenFor(q => q.IdEntidad)
    @Html.HiddenFor(q => q.IdPersona)
    @Html.HiddenFor(q => q.info_comprobante.IdTipoCbte)
    @Html.HiddenFor(q => q.info_comprobante.IdCbteCble)
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdSucursal">Tipo de persona*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdTipo_Persona, settings =>
               {
                   settings.Name = "IdTipo_Persona";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdTipo_Persona", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                   settings.Properties.Columns.Add("Descricpion", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                   //Campo ID
                   settings.Properties.ValueField = "IdTipo_Persona";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "Descricpion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lst_persona_tipo).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdTipo_Persona, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdTipo_op">Tipo orden pago*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdTipo_op, settings =>
               {
                   settings.Name = "IdTipo_op";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdTipo_op", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                   settings.Properties.Columns.Add("Descripcion", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                   //Campo ID
                   settings.Properties.ValueField = "IdTipo_op";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "Descricpion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lst_tipo_orden_pago).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdTipo_op, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdProveedor">Beneficiario*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEntidad, settings =>
                       {
                           settings.Name = "IdEntidad";
                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                           settings.Properties.DisplayFormatString = "[{0}] - {1}";
                           settings.Properties.Columns.Add("IdProveedor", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                           settings.Properties.Columns.Add("info_persona.pe_nombreCompleto", "Proveedor").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                           settings.Properties.Columns.Add("info_persona.pe_cedulaRuc", "Cédula").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                           settings.Properties.CallbackPageSize = 10;
                           //Campo ID
                           settings.Properties.ValueField = "IdProveedor";
                           settings.Properties.ValueType = typeof(decimal);
                           settings.Properties.TextField = "info_persona.pe_nombreCompleto";
                           //Boton para seleccionar ningun registro
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;

                       }).BindList(ViewBag.lst_proveedores).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEntidad, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdFormaPago">Forma de pago*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdFormaPago, settings =>
                       {
                           settings.Name = "IdFormaPago";
                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                           settings.Properties.DisplayFormatString = "[{0}] - {1}";
                           settings.Properties.Columns.Add("IdFormaPago", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                           settings.Properties.Columns.Add("descripcion", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                           //Campo ID
                           settings.Properties.ValueField = "IdFormaPago";
                           settings.Properties.ValueType = typeof(string);
                           settings.Properties.TextField = "Descripción";
                           //Boton para seleccionar ningun registro
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;

                       }).BindList(ViewBag.lst_forma_pago).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdFormaPago, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label for="Fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.Fecha, settings =>
                    {
                        settings.Name = "Fecha";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Fecha_Pago">Fecha pago*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.Fecha_Pago, settings =>
                    {
                        settings.Name = "Fecha_Pago";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha_Pago, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Fecha_PriPago">Valor a cancelar*</label>
                    @Html.TextBoxFor(q => q.Valor_a_pagar, new { @class = "form-control", @id = "Valor_a_pagar" })
                    @Html.ValidationMessageFor(q => q.Valor_a_pagar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="co_observacion">Observación*</label>
                    @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control", @id = "observacion" })
                </div>
            </div>
        </div>
    </div>
    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_datos_generales" aria-controls="informacion_general" role="tab" data-toggle="tab">Datos deuda a cancelar</a>
            </li>

            <li>
                <a href="#tab_asiento_contable" aria-controls="contabilidad" role="tab" data-toggle="tab">Asiento contable</a>
            </li>

        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_datos_generales">

                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="co_observacion">Detalle de deudad a cancelar</label>
                                @Html.Action("GridViewPartial_detalle_op")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_asiento_contable">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="co_observacion">Diario contable</label>
                                @Html.Action("GridViewPartial_orden_pago_dc")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-danger">Anular</button>
        <a class="btn btn-default" href="@Url.Action("Index","OrdenPago",new { Area = "CuentasPorPagar" },null)">Cancelar</a>
    </div>




    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script>
            $("#Valor_a_pagar").keyup(function () {
                armar_diario();
            });

            function armar_diario() {

                var datos = {
                    IdTipo_op: IdTipo_op.GetValue(),
                    IdEntidad: IdEntidad.GetValue(),
                    Valor_a_pagar: $("#Valor_a_pagar").val(),
                    observacion: $("#observacion").val()


                }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("armar_diario", "OrdenPago", new { Area = "CuentasPorPagar" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        GridViewPartial_detalle_op.PerformCallback();
                        GridViewPartial_orden_pago_dc.PerformCallback();

                    },
                    error: function (error) {
                    }
                });

            };


</script>
