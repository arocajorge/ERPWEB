@model Core.Erp.Info.ActivoFijo.Af_Retiro_Activo_Info
@{
    /**/

    ViewBag.Title = "Nuevo retiro ";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
@using (Html.BeginForm("Nuevo", "RetiroActivo", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Cod_Ret_Activo">Código</label>
                    @Html.TextBoxFor(q => q.Cod_Ret_Activo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Cod_Ret_Activo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-offset-8 col-md-2">
                <div class="form-group">
                    <label for="">Fecha de retiro</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.Fecha_Retiro, settings =>
                    {
                        settings.Name = "Fecha_Retiro";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha_Retiro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdActivoFijo">Activo fijo*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdActivoFijo, settings =>
                    {
                        settings.Name = "IdActivoFijo";
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Properties.DisplayFormatString = "[{0}] - {1}";
                        settings.Properties.Columns.Add("IdActivoFijo", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                        settings.Properties.Columns.Add("Af_Nombre", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(90);
                       //Campo ID
                       settings.Properties.ValueField = "IdActivoFijo";
                        settings.Properties.ValueType = typeof(int);
                        settings.Properties.TextField = "Af_Nombre";
                       //Boton para seleccionar ningun registro
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                        settings.Properties.NullText = "== Seleccione ==";
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_valores()}";
                    }).BindList(ViewBag.lst_fijo).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdActivoFijo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ValorActivo">V. activo*</label>
                    @Html.TextBoxFor(q => q.ValorActivo, new { @class = "form-control", @id = "ValorActivo" })
                    @Html.ValidationMessageFor(q => q.ValorActivo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Valor_Tot_Bajas">V. baja*</label>
                    @Html.TextBoxFor(q => q.Valor_Tot_Bajas, new { @class = "form-control", @id = "Valor_Tot_Bajas" })
                    @Html.ValidationMessageFor(q => q.Valor_Tot_Bajas, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Valor_Tot_Mejora">V. mejora*</label>
                    @Html.TextBoxFor(q => q.Valor_Tot_Mejora, new { @class = "form-control", @id = "Valor_Tot_Mejora" })
                    @Html.ValidationMessageFor(q => q.Valor_Tot_Mejora, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Valor_Depre_Acu">V. Depr. Acum.*</label>
                    @Html.TextBoxFor(q => q.Valor_Depre_Acu, new { @class = "form-control", @id = "Valor_Depre_Acu" })
                    @Html.ValidationMessageFor(q => q.Valor_Depre_Acu, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Valor_Neto">V. neto*</label>
                    @Html.TextBoxFor(q => q.Valor_Neto, new { @class = "form-control", @id = "Valor_Neto" })
                    @Html.ValidationMessageFor(q => q.Valor_Neto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_datos" aria-controls="datos" role="tab" data-toggle="tab">Datos generales</a>
            </li>
            <li>
                <a href="#tab_diario" aria-controls="diario" role="tab" data-toggle="tab">Diario contable</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_datos">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="NumComprobante">Número de comprobante</label>
                                @Html.TextBoxFor(q => q.NumComprobante, new { @class = "form-control" })
                                @Html.ValidationMessageFor(q => q.NumComprobante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Concepto_Retiro">Observación</label>
                                @Html.TextBoxFor(q => q.Concepto_Retiro, new { @class = "form-control" })
                                @Html.ValidationMessageFor(q => q.Concepto_Retiro, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_diario">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_comprobante_detalle", new { Area = "Contabilidad", Controller = "ComprobanteContable" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "RetiroActivo", new { Area = "ActivoFijo" }, null)">Cancelar</a>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script>
    $(function () {

        $("#IdActivoFijo").change(function () {
            get_valores();
        });

        function get_valores() {

            var id = IdActivoFijo.GetValue();
            var datos = {
                IdActivoFijo: id
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_valores", "RetiroActivo", new { Area = "ActivoFijo" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                    $("#ValorActivo").val(data.v_activo);
                    $("#Valor_Tot_Bajas").val(data.v_baja);
                    $("#Valor_Tot_Mejora").val(data.v_mejora);
                    $("#Valor_Depre_Acu").val(data.v_depr_acum);
                    $("#Valor_Neto").val(data.v_neto);

                },
                error: function (error) {
                }
            });
        };
    });

    function OnSelectedCtaCbleChanged() {
        GridView_comprobante_detalle.GetEditor("IdGrupoPresupuesto").PerformCallback();
    }
    function GrupoComboBox_BeginCallback(s, e) {
        e.customArgs["pre_IdCtaCble"] = IdCtaCble.GetValue();
        e.customArgs["pre_fecha"] = moment(cb_Fecha.GetDate()).format('DD/MM/YYYY');
    }
</script>