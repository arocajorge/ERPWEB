@model Core.Erp.Info.Facturacion.fa_factura_Info
@{
    ViewBag.Title = "Nueva factura";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

<script>
    $(function () {
        CargarPuntosDeVenta();
        GetUltimoDocumento();
        get_info_termino_pago();
        ValidarGrid();
        ValidarCliente();
        cargar_contactos();
        Set_NivelDescuento_x_FormaPago();

        $("#vt_tipo_venta").change(function () {
            get_info_termino_pago();
            CargarCuotas();
        });
        $("#vt_plazo").change(function () {
            cargar_fecha_vencimiento();
        });
        $("#IdSucursal").change(function () {
            Set_NivelDescuento_x_FormaPago();
            CargarPuntosDeVenta();
            GetUltimoDocumento();
        });
        $("#IdPuntoVta").change(function () {
            GetUltimoDocumento();
        });
        $("#IdCatalogo_FormaPago").change(function () {
            Set_NivelDescuento_x_FormaPago();
        });
        $("#valor_abono").change(function () {
            CargarCuotas();
        });
        $("#ValorEfectivo").keyup(function () {
            CalcularCambio();
        });
    });
    function ValidarCliente() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdCliente: IdCliente.GetValue(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ValidarCliente", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#txtMensajeCliente").text(data);
                if (data.length > 0) {
                    $("#DivMensajeCliente").show();
                    $("#DivSuperAdmin").show();
                } else {
                    $("#DivMensajeCliente").hide();
                    $("#DivSuperAdmin").hide();
                }
            },
            error: function (error) {
            }
        });
    }

    function BuscarProducto(Secuencia) {
        $("#Secuencia").text(Secuencia);
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val(),
            Secuencia: Secuencia,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdCliente: IdCliente.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("BuscarProducto", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.IdProducto_padre > 0) {
                    MostrarModal();
                }
            },
            error: function (error) {
            }
        });
    }

    function MostrarModal() {
        GridView_LoteFactura.PerformCallback();
        $("#OpModal").modal("show");
    }
    function MostrarModalDesbloqueo() {
        $("#ContraseniaAdministrador").val("");
        $("#ModalDesbloqueo").modal("show");
    }

    function Desbloquear() {
            var datos = {
                Contrasenia: $("#ContraseniaAdministrador").val()
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Desbloquear", "Factura",new { Area = "Facturacion"})',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "DESBLOQUEADO") {
                        $("#EstadoDesbloqueo").text(data);
                        $("#EstadoDesbloqueo").show();
                        $("#btn_desbloquear").hide();
                    }else
                        $("#EstadoDesbloqueo").hide();
                },
                error: function (error) {
                }
            });
            $("#ModalDesbloqueo").modal("hide");
        }

    function MostrarModalPrecios(Secuencia) {
        if ($("#EstadoDesbloqueo").text() == "DESBLOQUEADO") {
            var datos = {
                IdTransaccionSession: $("#IdTransaccionSession").val(),
                Secuencia: Secuencia
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("GetLineaDetalle", "Factura",new { Area = "Facturacion"})',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#Secuencia").text(data.Secuencia);
                    $("#txtPrecio").val(data.vt_Precio);
                    $("#txtPorDescuento").val(data.vt_PorDescUnitario);
                    $("#ModalPrecios").modal("show");
                },
                error: function (error) {
                }
            });

        }
    }

    function ModificarLinea() {
        var AplicarDscto = false;
        if ($("#chk_aplicar_todo").is(":checked")) {
            AplicarDscto = true;
        }
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            Secuencia: $("#Secuencia").text(),
            Precio: $("#txtPrecio").val(),
            PorDescuento: $("#txtPorDescuento").val(),
            AplicarTodaFactura: AplicarDscto
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ModificarLinea", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_factura_det.PerformCallback();
            },
            error: function (error) {
            }
        });
        $("#ModalPrecios").modal("hide");
    }
    function SetLoteDetalle(ID) {
        if (Number($("#Secuencia").text()) > 0) {
            var datos = {
                Secuencia: $("#Secuencia").text(),
                IdTransaccionSession: $("#IdTransaccionSession").val(),
                IdProducto: ID
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("ModificarLineaProducto", "Factura",new { Area = "Facturacion"})',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    GridView_factura_det.PerformCallback();
                },
                error: function (error) {
                }
            });
        } else {
            $.ajax({
                url: '@Url.Action("ChangeValuePartial", "Factura",new { Area = "Facturacion"})',
                type: "GET",
                data: { value: ID },
                success: function (data) {
                    $('#ajaxDiv').html(data);
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Request Status: ' + xhr.status + '; Status Text: ' + textStatus + '; Error: ' + errorThrown);
                }
            });
        }

        $.ajax({
                url: '@Url.Action("ValidarSeleccionLote", "Factura",new { Area = "Facturacion"})',
                type: "GET",
                data: { IdProducto: ID },
                success: function (data) {
                    if (data != "") {
                        alert(data);
                    }
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

        $("#Secuencia").text(0);
        $("#OpModal").modal("hide");
    }

    function SeleccionarLote(s, e) {
        $("#Secuencia").text(0);
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val(),
            IdProducto: s.GetValue(),
            IdCliente: IdCliente.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetLotesPorProducto", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                //GridView_factura_det.GetEditor('IdCod_Impuesto_Iva').SetValue(data.IdCod_Impuesto_Iva);
                if (data.IdProducto_padre > 0) {
                    MostrarModal();
                }
            },
            error: function (error) {
            }
        });
    }

    function cargar_fecha_vencimiento() {
        var vida = Number($("#vt_plazo").val());
        var date = new Date(moment(vt_fecha.GetValue(), "DD/MM/YYYY").add(vida, 'days'));
        vt_fech_venc.SetValue(date);
    }

        function get_info_termino_pago() {
        var datos = {
            IdTerminoPago: $("#vt_tipo_venta").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_info_termino_pago", "Factura",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#vt_plazo").val(data.Dias_Vct);
                cargar_fecha_vencimiento();
            },
            error: function (error) {

            }
        });
    }


    function get_info_cliente() {
        var tipo = IdCliente.GetValue();

        var datos = {
            IdCliente: tipo,
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_info_cliente", "Factura",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#IdVendedor").val(data.IdVendedor);
                $("#vt_tipo_venta").val(data.IdTipoCredito);

                get_info_termino_pago();  
            },
            error: function (error) {
                alert(error);
            }

        });        
    }

    function cargar_contactos() {
        var codigo = IdCliente.GetValue();

        if (codigo > 0) 
        {
            var datos = {
                IdCliente: codigo
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("cargar_contactos", "Factura",new { Area = "Facturacion"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#DatosCliente").val(data);
                },
                error: function (error) {
                }
            });
        }
        else{
            $("#DatosCliente").val("");
        }
    }

    function CargarPuntosDeVenta() {
        $("#IdPuntoVta").empty();
        var datos = {
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CargarPuntosDeVenta", "Factura",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdPuntoVta").append("<option value=" + row.IdPuntoVta + ">" + row.nom_PuntoVta + "</option>");
                    $("#IdPuntoVta").val($("#IdPuntoVta option:first").val());
                });
            },
            error: function (error) {
            }
        });
    }

       function CargarCuotas() {
            var datos = {
                FechaPrimerPago: fecha_primera_cuota.GetDate(),
                    IdTerminoPago: $("#vt_tipo_venta").val(),
                ValorPrimerPago: $("#valor_abono").val(),
                IdTransaccionSession: $("#IdTransaccionSession").val()
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("CargarCuotas", "Factura",new { Area = "Facturacion"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                },
                error: function (error) {
                }
            });
            GridView_factura_cuotas.PerformCallback();
       }

    function GetUltimoDocumento() {
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetUltimoDocumento", "Factura", new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.data_puntovta != null)
                {
                    if (data.data_puntovta.EsElectronico == true)
                    {
                        $("#datos_punto_venta1").hide();
                        $("#datos_punto_venta2").hide();
                        $("#datos_punto_venta3").hide();
                    }
                    else
                    {
                        $("#datos_punto_venta1").show();
                        $("#datos_punto_venta2").show();
                        $("#datos_punto_venta3").show();

                        if (data.data_talonario != null)
                        {
                            $("#vt_serie1").val(data.data_talonario.Establecimiento);
                            $("#vt_serie2").val(data.data_talonario.PuntoEmision);
                            $("#vt_NumFactura").val(data.data_talonario.NumDocumento);
                        }
                    }
                }
            },
            error: function (error) {
            }
        });
    }

    var selectedIDs;
    function OnBeginCallback(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("secuencial", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    function MostrarModalProformas() {
        var proforma = $("#IdProforma").val()

        if (proforma != null && proforma != 0 && proforma!="") {

            if (IdCliente.GetValue() > 0) {
                var datos = {
                    IdSucursal: $("#IdSucursal").val(),
                    IdCliente: IdCliente.GetValue(),
                    IdProforma: $("#IdProforma").val(),
                    IdTransaccionSession: $("#IdTransaccionSession").val()

                }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("GetProformas", "Factura", new { Area = "Facturacion" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data == false) {
                            alert('No existe datos para el número de proforma ' + proforma + ' ingresado');
                        }
                    },
                    error: function (error) {
                    }
                });
                GridView_factura_det.PerformCallback()
            }
        }
        else
        {

        if (IdCliente.GetValue() > 0) {
            var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdCliente: IdCliente.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetProformasPorFacturar", "Factura", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

            },
            error: function (error) {
            }
        });
            GridView_PFactura_det.PerformCallback();
            $("#ProformasModal").modal("show");
            }
    }

    }

    function AddProformas() {

        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("AddProformas", "Factura", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

            },
            error: function (error) {
            }
        });
            selectedIDs = "";
        GridView_PFactura_det.PerformCallback();
        GridView_PFactura_det.UnselectRows();
        GridView_factura_det.PerformCallback();
            $("#ProformasModal").modal("hide");
    }



    function ValidarGrid() {
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ValidarGrid", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#txtMensaje").text(data.mensaje);

                $("#SubtotalIVASinDscto").val(data.SubtotalIVASinDscto);
                $("#SubtotalSinIVASinDscto").val(data.SubtotalSinIVASinDscto);
                $("#Descuento").val(data.Descuento);

                $("#SubtotalIVAConDscto").val(data.SubtotalIVAConDscto);
                $("#SubtotalSinIVAConDscto").val(data.SubtotalSinIVAConDscto);
                $("#ValorIVA").val(data.ValorIVA);
                $("#Total").val(data.Total);

                if (data.mensaje.length > 0) {
                    $("#divMensaje").show();
                } else {
                    $("#divMensaje").hide();
                }
                CalcularCambio();
            },
            error: function (error) {
            }
        });
    }

    function Set_NivelDescuento_x_FormaPago() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdCatalogo_FormaPago: $("#IdCatalogo_FormaPago").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Get_NivelDescuento_x_FormaPago", "Factura",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                if(data>0){
                    $('#IdNivel').val(data);
                }
            },
            error: function (error) {
            }
        });
    }

    function CalcularCambio() {
        var Total = Number($("#Total").val());
        var Efectivo = Number($("#ValorEfectivo").val());
        $("#Cambio").val((Efectivo - Total).toFixed(2));
    }

    function CrearModificarCliente() {
        var location = GetPathServer();
        if(IdCliente.GetValue() > 0)
        {
            var win = window.open(location + "/Facturacion/Cliente/Modificar?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdCliente=" + IdCliente.GetValue(), '_blank');
             win.focus();
        }else
        {
            var win = window.open(location + "/Facturacion/Cliente/Nuevo?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa, '_blank');
             win.focus();
        }
    }
</script>

@using (Html.BeginForm("Nuevo", "Factura", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.vt_tipoDoc)
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    <div class="row" id="DivSuperAdmin" hidden>
        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="">Usuario administrador</label>
                    @Html.TextBoxFor(q => q.IdUsuarioAut, new { @class = "form-control", @id = "IdUsuarioAut" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="">Contraseña</label>
                    @Html.PasswordFor(q => q.contrasena_admin, new { @class = "form-control", @id = "contrasena_admin" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible" id="DivMensajeCliente" hidden>
                    <h4>
                        <i class="icon fa fa-warning"></i> <label id="txtMensajeCliente">MENSAJE</label>
                    </h4>
                </div>
            </div>
        </div>
    </div>


    if (ViewBag.mensaje != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible">
                    <h4>
                        <i class="icon fa fa-warning"></i> @ViewBag.mensaje
                    </h4>
                </div>
            </div>
        </div>
    }

    <div class="modal fade" id="OpModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Lotes disponibles</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_LoteFactura")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModalDesbloqueo" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ingrese la contraseña de desbloqueo</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group has-feedback">
                                @Html.PasswordFor(q => q.ContraseniaAdministrador, new { @class = "form-control", @placeholder = "Contraseña desbloqueo", @id = "ContraseniaAdministrador" })
                                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <button type="button" class="btn btn-primary" onclick="Desbloquear();">Desbloquear</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModalPrecios" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Linea # <label id="Secuencia">0</label></h4>
                </div>
                <div class="modal-body">
                    <div class="col-md-6 form-group">
                        <label for="txtPrecio">Precio</label>
                        <input type="text" id="txtPrecio" class="form-control" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="txtPorDescuento">% Descuento</label>
                        <input type="text" id="txtPorDescuento" class="form-control" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="chk_aplicar_todo"><input type="checkbox" id="chk_aplicar_todo" value="true|false" /> Aplicar descuento a toda la factura</label>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-primary" onclick="ModificarLinea();">Aceptar</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ProformasModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Proformas pendientes</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_PFactura_det")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="AddProformas();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdPuntoVta">Punto de venta*</label>
                    @Html.DropDownListFor(q => q.IdPuntoVta, new SelectList(ViewBag.lst_punto_venta, "IdPuntoVta", "nom_PuntoVta"), new { @class = "form-control", @id = "IdPuntoVta" })
                    @Html.ValidationMessageFor(q => q.IdPuntoVta, "", new { @class = "text-danger" })
                </div>
            </div>           
            <div class="col-md-10">
                <div class="form-group">
                    <label for="IdCliente">Cliente*</label>
                    @Html.Partial("_CmbCliente_Factura", Model.IdCliente)
                    @Html.ValidationMessageFor(q => q.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control " onclick="CrearModificarCliente();">
                        <i class="fa fa-external-link-square"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="DatosCliente">Información adicional</label>
                    <input class="form-control" type="text" id="DatosCliente" value="" readonly="readonly" />
                </div>
            </div>            
            <div class="col-md-3" id="datos_punto_venta1">
                <div class="form-group">
                    <label for="Serie1">Establecimiento*</label>
                    @Html.TextBoxFor(q => q.vt_serie1, new { @class = "form-control", @id = "vt_serie1" })
                    @Html.ValidationMessageFor(q => q.vt_serie1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3" id="datos_punto_venta2">
                <div class="form-group">
                    <label for="Serie2">Pto. Emisión*</label>
                    @Html.TextBoxFor(q => q.vt_serie2, new { @class = "form-control", @id = "vt_serie2" })
                    @Html.ValidationMessageFor(q => q.vt_serie2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6" id="datos_punto_venta3">
                <div class="form-group">
                    <label for="NumNota_Impresa"># Documento*</label>
                    @Html.TextBoxFor(q => q.vt_NumFactura, new { @class = "form-control", @id = "vt_NumFactura" })
                    @Html.ValidationMessageFor(q => q.vt_NumFactura, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="pf_observacion">Observación</label>
                    @Html.TextBoxFor(q => q.vt_Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.vt_Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdProforma">       </label>
                    @Html.TextBoxFor(q => q.IdProforma, new { @class = "form-control", @id = "IdProforma", @placeholder = "# Proforma" })
                    @Html.ValidationMessageFor(q => q.IdProforma, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="btn_buscar">                    </label>
                    <button type="button" class="btn btn-primary form-control" id="btn_buscar" onclick="MostrarModalProformas();" title="Buscar proformas">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="btn_desbloquear">         </label>
                    <button type="button" class="btn btn-primary form-control" id="btn_desbloquear" onclick="MostrarModalDesbloqueo();" title="Desbloquear precios">
                        <i class="fa fa-lock"></i>
                    </button>
                    <label id="EstadoDesbloqueo" class="text-danger" style="margin-left:5px;" hidden></label>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div id="Tabs" role="tabpanel">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active">
                        <a href="#tab_general" aria-controls="general" role="tab" data-toggle="tab" id="link_general">Datos generales</a>
                    </li>
                    <li>
                        <a href="#tab_cuotas" aria-controls="lote" role="tab" data-toggle="tab" id="link_cuotas">Detalle de cuotas</a>
                    </li>
                </ul>
                <div class="tab-content" style="padding-top: 5px">
                    <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_general">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IdCatalogo_FormaPago">Forma de pago*</label>
                                @Html.DropDownListFor(q => q.IdCatalogo_FormaPago, new SelectList(ViewBag.lst_formapago, "IdCatalogo", "Nombre"), new { @class = "form-control", @id = "IdCatalogo_FormaPago" })
                                @Html.ValidationMessageFor(q => q.IdCatalogo_FormaPago, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IdNivel">Nivel Descuento*</label>
                                @Html.DropDownListFor(q => q.IdNivel, new SelectList(ViewBag.lst_NivelDescuento, "IdNivel", "Descripcion"), new { @class = "form-control", @id = "IdNivel" })
                                @Html.ValidationMessageFor(q => q.IdNivel, "", new { @class = "text-danger" })
                            </div>
                        </div>                        
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="IdTerminoPago">Termino pago*</label>
                                @Html.DropDownListFor(q => q.vt_tipo_venta, new SelectList(ViewBag.lst_pago, "IdTerminoPago", "nom_TerminoPago"), new { @class = "form-control", @id = "vt_tipo_venta" })
                                @Html.ValidationMessageFor(q => q.vt_tipo_venta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdVendedor">Vendedor*</label>
                                @Html.DropDownListFor(q => q.IdVendedor, new SelectList(ViewBag.lst_vendedor, "IdVendedor", "Ve_Vendedor"), new { @class = "form-control", @id = "IdVendedor" })
                                @Html.ValidationMessageFor(q => q.IdVendedor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pf_fecha">Fecha*</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.vt_fecha, settings =>
                                   {
                                       settings.Name = "vt_fecha";
                                       settings.Properties.UseMaskBehavior = true;
                                       settings.Properties.EditFormat = EditFormat.Date;
                                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                       settings.Properties.ClientSideEvents.DateChanged = "function(s,e){cargar_fecha_vencimiento();}";
                                   }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.vt_fecha, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pf_plazo">Plazo*</label>
                                @Html.TextBoxFor(q => q.vt_plazo, new { @class = "form-control", @id = "vt_plazo" })
                                @Html.ValidationMessageFor(q => q.vt_plazo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pf_fecha_vcto">Vencimiento*</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.vt_fech_venc, settings =>
                                   {
                                       settings.Name = "vt_fech_venc";
                                       settings.Properties.UseMaskBehavior = true;
                                       settings.Properties.EditFormat = EditFormat.Date;
                                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.vt_fech_venc, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                    </div>
                    <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_cuotas">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="fecha_primera_cuota">Fecha primer cuota</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.DevExpress().DateEditFor(q => q.fecha_primera_cuota, settings =>
                                  {
                                      settings.Name = "fecha_primera_cuota";
                                      settings.Properties.UseMaskBehavior = true;
                                      settings.Properties.EditFormat = EditFormat.Date;
                                      settings.Properties.EditFormatString = "dd/MM/yyyy";
                                      settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                      settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                      settings.Properties.ClientSideEvents.DateChanged = "function(s,e){CargarCuotas();}";
                                  }).GetHtml()
                                        @Html.ValidationMessageFor(q => q.fecha_primera_cuota, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="">Valor abono</label>
                                    @Html.TextBoxFor(q => q.valor_abono, new { @class = "form-control", @id = "valor_abono" })
                                </div>
                            </div>
                        </div>
                        @Html.Action("GridViewPartial_factura_cuotas")
                        <br />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible" id="divMensaje" hidden>
                    <h4>
                        <i class="icon fa fa-warning"></i> <label id="txtMensaje">MENSAJE</label>
                    </h4>
                </div>
            </div>
        </div>
    </div>

    
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                @Html.Action("GridViewPartial_factura_det", new { DescuentoReadonly = Model.DescuentoReadOnly })
            </div>
        </div>
    </div>
    <br />
    <div class="row" id="DivEfectivo" >
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SubtotalSinIVASinDscto">Base sin IVA</label>
                    @Html.TextBoxFor(q => q.info_resumen.SubtotalSinIVASinDscto, new { @id = "SubtotalSinIVASinDscto", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SubtotalIVASinDscto">Base con IVA</label>
                    @Html.TextBoxFor(q => q.info_resumen.SubtotalIVASinDscto, new { @id = "SubtotalIVASinDscto", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Descuento">Descuento</label>
                    @Html.TextBoxFor(q => q.info_resumen.Descuento, new { @id = "Descuento", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SubtotalSinIVAConDscto">Subtotal Sin IVA</label>
                    @Html.TextBoxFor(q => q.info_resumen.SubtotalSinIVAConDscto, new { @id = "SubtotalSinIVAConDscto", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="SubtotalIVAConDscto">Subtotal Con IVA</label>
                    @Html.TextBoxFor(q => q.info_resumen.SubtotalIVAConDscto, new { @id = "SubtotalIVAConDscto", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ValorIVA">IVA</label>
                    @Html.TextBoxFor(q => q.info_resumen.ValorIVA, new { @id = "ValorIVA", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Total">Total</label>
                    @Html.TextBoxFor(q => q.info_resumen.Total, new { @id = "Total", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ValorEfectivo">Efectivo</label>
                    @Html.TextBoxFor(q => q.info_resumen.ValorEfectivo, new { @id = "ValorEfectivo", @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.info_resumen.ValorEfectivo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Cambio">Cambio</label>
                    @Html.TextBoxFor(q => q.info_resumen.Cambio, new { @id = "Cambio", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","Factura",new { Area = "Facturacion" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

