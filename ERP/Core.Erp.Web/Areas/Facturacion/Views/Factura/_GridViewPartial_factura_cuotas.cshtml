@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_factura_cuotas";
        settings.CallbackRouteValues = new { Controller = "Factura", Action = "GridViewPartial_factura_cuotas", Area = "Facturacion"};
        settings.KeyFieldName = "secuencia";
        settings.SettingsPager.PageSize = 3;
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Factura", Action = "EditingUpdateCuota", Area = "Facturacion" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Factura", Action = "EditingDeleteCuota", Area = "Facturacion" };

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Columns.Add(column =>
        {
            column.FieldName = "num_cuota";
            column.Caption = "# Cuota";
            column.PropertiesEdit.DisplayFormatString = "{0:n0}";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "fecha_vcto_cuota";
            column.Caption = "Fecha vcto.";
            column.PropertiesEdit.DisplayFormatString = "{0:dd/MM/yyyy}";
            column.Width = Unit.Percentage(40);
            column.EditorProperties().DateEdit(q =>
            {
                q.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "valor_a_cobrar";
            column.Caption = "Valor";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(40);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
            });
        });

        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "valor_a_cobrar").DisplayFormat = "{0:n2}";
        settings.Settings.ShowFooter = true;
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()