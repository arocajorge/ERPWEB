@using System.Web.UI.WebControls;

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_fa_vendedor";
        settings.CallbackRouteValues = new { Controller = "Cliente", Action = "GridViewPartial_fa_vendedor" };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdCliente";
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Cliente", Action = "Editing_AddNew", Area = "Facturacion" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Cliente", Action = "Editing_Update", Area = "Facturacion" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Cliente", Action = "Editing_Delete", Area = "Facturacion" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdSucursal"] = "";
            e.NewValues["IdVendedor"] = "";
        };
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdSucursal";
            column.Caption = "Sucursal";
            column.Width = Unit.Percentage(50);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("Su_Descripcion", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "Su_Descripcion";
                p.ValueField = "IdSucursal";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.lst_sucursal;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdVendedor";
            column.Caption = "Vendedor";
            column.Width = Unit.Percentage(50);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("Ve_Vendedor", "Nombre").Width = Unit.Percentage(100);
                p.TextField = "Ve_Vendedor";
                p.ValueField = "IdVendedor";
                p.ValueType = typeof(int);
                p.DataSource = ViewBag.lst_vendedor;
            });
        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";

    });
}
@grid.Bind(Model).GetHtml()