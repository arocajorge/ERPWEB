@model Core.Erp.Info.Facturacion.fa_proforma_Info
@{
    ViewBag.Title = ("Modificar proforma" + " con ID #" + @Model.IdProforma);
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script>
    $(function () {
        cargar_bodega();
        //Date picker
        $('#pf_fecha').datepicker({
            autoclose: true
        })
        $('#pf_fecha_vcto').datepicker({
            autoclose: true
        })
        $("#IdTerminoPago").change(function () {
            get_info_termino_pago();
        });
        $("#pf_plazo").change(function () {
            cargar_fecha_vencimiento();
        });
        $("#pf_fecha").change(function () {
            cargar_fecha_vencimiento();
        });

        $("#IdSucursal").change(function () {
            Set_NivelDescuento_x_FormaPago();
            cargar_bodega();
        });
        $("#IdCatalogo_FormaPago").change(function () {
            Set_NivelDescuento_x_FormaPago();
        });

        $('#ModalDesbloqueo').on('shown.bs.modal', function() { $("#ContraseniaAdministrador").focus(); })
    });

    function Set_NivelDescuento_x_FormaPago() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdCatalogo_FormaPago: $("#IdCatalogo_FormaPago").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Get_NivelDescuento_x_FormaPago", "Proforma",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                if (data > 0) {
                    $('#IdNivel').val(data);
                }
            },
            error: function (error) {
            }
        });
    }
    function cargar_bodega() {
        $("#IdBodega").empty();

        var sucursal = $("#IdSucursal").val();

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: sucursal
        }

        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_bodega", "Proforma", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBodega").append("<option value=" + row.IdBodega + ">" + row.bo_Descripcion + "</option>");
                });
            },
            error: function (error) {
            }
        });
    };

    function cargar_fecha_vencimiento() {
        var vida = Number($("#pf_plazo").val());
        var date = new Date(moment(pf_fecha.GetValue(), "DD/MM/YYYY").add(vida, 'days'));
        pf_fecha_vcto.SetValue(date);
    }

    function get_info_termino_pago() {
        var datos = {
            IdTerminoPago: $("#IdTerminoPago").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_info_termino_pago", "Proforma",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#pf_plazo").val(data.Dias_Vct);
                cargar_fecha_vencimiento();
            },
            error: function (error) {

            }
        });
    }
    function get_info_cliente() {
        var tipo = IdCliente.GetValue();

        var datos = {
            IdCliente: tipo,
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_info_cliente", "Proforma",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#pf_atencion_a").val(data.info_persona.pe_nombreCompleto);
                $("#IdVendedor").val(data.IdVendedor);
            },
            error: function (error) {
                alert(error);
            }
        });
    }

    function MostrarModalDesbloqueo() {
        $("#ContraseniaAdministrador").val("");
        $("#ModalDesbloqueo").modal("show");
    }

    function Desbloquear() {
        var datos = {
            Contrasenia: $("#ContraseniaAdministrador").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Desbloquear", "Proforma", new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "DESBLOQUEADO") {
                    $("#EstadoDesbloqueo").text(data);
                    $("#EstadoDesbloqueo").show();
                    $("#btn_desbloquear").hide();
                } else
                    $("#EstadoDesbloqueo").hide();
            },
            error: function (error) {
            }
        });
        $("#ModalDesbloqueo").modal("hide");
    }

    function MostrarModalPrecios(Secuencia) {
        if ($("#EstadoDesbloqueo").text() == "DESBLOQUEADO") {
            var datos = {
                IdTransaccionSession: $("#IdTransaccionSession").val(),
                Secuencia: Secuencia
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("GetLineaDetalle", "Proforma", new { Area = "Facturacion"})',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#Secuencia").text(data.Secuencia);
                    $("#txtPrecio").val(data.pd_precio);
                    $("#txtPorDescuento").val(data.pd_por_descuento_uni);
                    $("#ModalPrecios").modal("show");
                },
                error: function (error) {
                }
            });

        }
    }

    function ModificarLinea() {
        var AplicarDscto = false;
        if ($("#chk_aplicar_todo").is(":checked")) {
            AplicarDscto = true;
        }
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            Secuencia: $("#Secuencia").text(),
            Precio: $("#txtPrecio").val(),
            PorDescuento: $("#txtPorDescuento").val(),
            AplicarTodaFactura: AplicarDscto
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ModificarLinea", "Proforma",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_proforma_det.PerformCallback();
            },
            error: function (error) {
            }
        });
        $("#ModalPrecios").modal("hide");
    }

    function BuscarProducto(Secuencia) {
        $("#Secuencia").text(Secuencia);
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdBodega: $("#IdBodega").val(),
            Secuencia: Secuencia,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("BuscarProducto", "Proforma",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.IdProducto_padre > 0) {
                    MostrarModal();
                }
            },
            error: function (error) {
            }
        });
    }

    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/FacturacionReportes/FAC_006?IdEmpresa="+@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdSucursal="+@Model.IdSucursal+"&IdProforma="+@Model.IdProforma+"&mostrar_imagen="+false, '_blank');
        win.focus();
    }

    function CrearModificarCliente() {
        var location = GetPathServer();
        if(IdCliente.GetValue() > 0)
        {
            var win = window.open(location + "/Facturacion/Cliente/Modificar?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdCliente=" + IdCliente.GetValue(), '_blank');
            win.focus();
        }else
        {
            var win = window.open(location + "/Facturacion/Cliente/Nuevo?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa, '_blank');
            win.focus();
        }
    }

function cargar_lista_contactos() {
    var Id = IdCliente.GetValue();

    if (Id > 0)
    {
        var datos = {
            IdCliente: Id
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_lista_contactos", "ClienteContactos", new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdContacto").append("<option value=" + row.IdContacto + ">" + row.Nombres_combo + "</option>");
                });
            },
            error: function (error) {
            }
        });
    }
}
</script>

@using (Html.BeginForm("ModificarProFact", "Proforma", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdSucursal)
    @Html.HiddenFor(q => q.IdProforma)
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    <div class="modal fade" id="ModalDesbloqueo" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ingrese la contraseña de desbloqueo</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group has-feedback">
                                @Html.PasswordFor(q => q.ContraseniaAdministrador, new { @class = "form-control", @placeholder = "Contraseña desbloqueo", @id = "ContraseniaAdministrador" })
                                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <button type="button" class="btn btn-primary" onclick="Desbloquear();">Desbloquear</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModalPrecios" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Linea #<label id="Secuencia">0</label></h4>
                </div>
                <div class="modal-body">

                    <div class="col-md-6 form-group">
                        <label for="txtPrecio">Precio</label>
                        <input type="text" id="txtPrecio" class="form-control" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="txtPorDescuento">% Descuento</label>
                        <input type="text" id="txtPorDescuento" class="form-control" />
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="chk_aplicar_todo"><input type="checkbox" id="chk_aplicar_todo" value="true|false" /> Aplicar descuento a toda la proforma</label>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-primary" onclick="ModificarLinea();">Aceptar</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-10 col-md-1">
                <label for="IdImprimir"></label>
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" id="btn_imprimir" onclick="Imprimir();" title="Imprimir">
                        <i class="fa fa-print"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <label for="IdNuevo"></label>
                <div class="form-group">
                    <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","Proforma",new { Area = "Facturacion", IdEmpresa = Model.IdEmpresa },null)">
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="codigo">Código</label>
                    @Html.TextBoxFor(q => q.pf_codigo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.pf_codigo, "", new { @class = "text-danger", @id = "pf_codigo", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdBodega">Bodega*</label>
                    @Html.DropDownListFor(q => q.IdBodega, new SelectList(ViewBag.lst_bodega, "IdBodega", "bo_descripcion"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.IdBodega, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-10">
                <div class="form-group">
                    <label for="IdCliente">Cliente*</label>
                    @Html.Partial("_CmbCliente_Proforma", Model.IdCliente)
                    @Html.ValidationMessageFor(q => q.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control " onclick="CrearModificarCliente();">
                        <i class="fa fa-external-link-square"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdPuntoVta">Contactos</label>
                    @Html.DropDownListFor(q => q.IdContacto, new SelectList(ViewBag.lst_cliente_contactos, "IdContacto", "Nombres_combo"), new { @class = "form-control", @id = "IdContacto" })
                    @Html.ValidationMessageFor(q => q.IdContacto, "", new { @class = "text-danger" })
                </div>
            </div> 
        </div>

        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdCatalogo_FormaPago">Forma de pago*</label>
                    @Html.DropDownListFor(q => q.IdCatalogo_FormaPago, new SelectList(ViewBag.lst_formapago, "IdCatalogo", "Nombre"), new { @class = "form-control", @id = "IdCatalogo_FormaPago" })
                    @Html.ValidationMessageFor(q => q.IdCatalogo_FormaPago, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdNivel">Nivel Descuento*</label>
                    @Html.DropDownListFor(q => q.IdNivel, new SelectList(ViewBag.lst_NivelDescuento, "IdNivel", "Descripcion"), new { @class = "form-control", @id = "IdNivel" })
                    @Html.ValidationMessageFor(q => q.IdNivel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdTerminoPago">Termino pago*</label>
                    @Html.DropDownListFor(q => q.IdTerminoPago, new SelectList(ViewBag.lst_pago, "IdTerminoPago", "nom_TerminoPago"), new { @class = "form-control", @id = "IdTerminoPago" })
                    @Html.ValidationMessageFor(q => q.IdTerminoPago, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdVendedor">Vendedor*</label>
                    @Html.DropDownListFor(q => q.IdVendedor, new SelectList(ViewBag.lst_vendedor, "IdVendedor", "Ve_Vendedor"), new { @class = "form-control", @id = "IdVendedor" })
                    @Html.ValidationMessageFor(q => q.IdVendedor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="pf_fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.pf_fecha, settings =>
                   {
                       settings.Name = "pf_fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       settings.Properties.AllowMouseWheel = false;
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.pf_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="pf_plazo">Plazo*</label>
                    @Html.TextBoxFor(q => q.pf_plazo, new { @class = "form-control", @id = "pf_plazo" })
                    @Html.ValidationMessageFor(q => q.pf_plazo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="pf_fecha_vcto">Vencimiento*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.pf_fecha_vcto, settings =>
                   {
                       settings.Name = "pf_fecha_vcto";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       settings.Properties.AllowMouseWheel = false;
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.pf_fecha_vcto, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="pf_observacion">Observación</label>
                    @Html.TextBoxFor(q => q.pf_observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.pf_observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <button type="button" class="btn btn-primary" id="btn_desbloquear" onclick="MostrarModalDesbloqueo();">
                    <i class="fa fa-lock"></i>
                </button>
                <label id="EstadoDesbloqueo" class="text-danger" style="margin-left:10px;" hidden></label>                
            </div>
        </div>
    </div>
    <br />

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.Action("GridViewPartial_proforma_facturada_det")
                </div>
            </div>
        </div>

        <div class="box-footer">
            <a class="btn btn-default" href="@Url.Action("Index","Proforma",new { Area = "Facturacion" },null)">Cancelar</a>
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
        }
