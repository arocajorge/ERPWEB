<script>

    var selectedIDs;
    function OnBeginCallback(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["selectedIDs"] = selectedIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdCbteVta", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    function seleccionar_aprobacion() {
        var datos = {
            Ids: selectedIDs,
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val(),
            IdTransaccionSession: $('#IdTransaccionSession').val()
        }
        $("#btn_guardar").disabled = true;
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("seleccionar_aprobacion","GuiaRemision", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $("#myform").submit();
                GridViewPartial_guias_remision_det.PerformCallback();
                GridViewPartial_Facturas_x_guia.PerformCallback();
                selectedIDs = "";
                $("#OpModal").modal("hide");


            },
            error: function (error) {
            }
        });
        $("#btn_guardar").disabled = false;
    }

    function CrearModificarCliente() {
        var location = GetPathServer();
        if(IdCliente.GetValue() > 0)
        {
            var win = window.open(location + "/Facturacion/Cliente/Modificar?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdCliente=" + IdCliente.GetValue(), '_blank');
            win.focus();
        }else
        {
            var win = window.open(location + "/Facturacion/Cliente/Nuevo?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa, '_blank');
            win.focus();
        }
    }

    function ImprimirRIDE() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/FacturacionReportes/FAC_020?IdSucursal="+@Model.IdSucursal+"&IdBodega="+@Model.IdBodega+"&IdGuiaRemision="+@Model.IdGuiaRemision, '_blank');
        win.focus();
    }


    function AutorizarSRI() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val(),
            IdBodega: $("#IdBodega").val(),
            IdGuiaRemision: $("#IdGuiaRemision").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("AutorizarSRI", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.length > 0) {
                    alert("Solicitud de autorización enviada exitósamente, por favor espere a que sea procesada por el SRI para imprimir el RIDE");
                }
            },
            error: function (error) {
            }
        });
    }

    function CrearModificarContacto() {
        var location = GetPathServer();
        if(IdCliente.GetValue() > 0)
        {
            var win = window.open(location + "/Facturacion/ClienteContactos/Nuevo?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa+"&IdCliente=" + IdCliente.GetValue(), '_blank');
            win.focus();
        }else
        {
            alert ("Debe seleccionar un cliente para crear contactos");
        }
    }
</script>
@model Core.Erp.Info.Facturacion.fa_guia_remision_Info
@{
    ViewBag.Title = "Consultar guía de remisión con factura";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
@using (Html.BeginForm("Consultar", "GuiaRemision", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    @Html.HiddenFor(q => q.IdGuiaRemision)
    @Html.HiddenFor(q => q.IdBodega, new { @id = "IdBodega" })
    @Html.HiddenFor(q => q.IdPuntoVta, new { @id = "IdPuntoVta" })
    @Html.HiddenFor(q => q.IdCbteVta, new { @id = "IdCbteVta" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
    if (ViewBag.error != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.error
                <a href="@Url.Action("Index","LogError",new  {Area="General"}, null )" class="small-box-footer" target="_blank">Ver detalle error<i class="fa fa-arrow-circle-right"></i></a>
            </h4>
        </div>

    }

    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-6 col-md-1">
                @if (@ViewBag.Nuevo == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","GuiaRemision",new { Area = "Facturacion", IdEmpresa = Model.IdEmpresa },null)">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Modificar == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Modificar" href="@Url.Action("Modificar", "GuiaRemision", new { Area = "Facturacion", IdEmpresa = Model.IdEmpresa, IdGuiaRemision = Model.IdGuiaRemision }, null)">
                            <i class="fa fa-edit"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Anular == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Anular" href="@Url.Action("Anular", "GuiaRemision", new { Area = "Facturacion", IdEmpresa = Model.IdEmpresa, IdGuiaRemision = Model.IdGuiaRemision }, null)">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                <button type="button" class="btn btn-primary form-control" id="ride" onclick="ImprimirRIDE();" title="Imprimir">
                    <i class="fa fa-print"></i>  RIDE
                </button>
            </div>
            <div class="col-md-1">
                <button type="button" class="btn btn-primary form-control" id="sri" onclick="AutorizarSRI();" title="Autorizar SRI">
                    <i class="fa fa-send"></i>  SRI
                </button>
            </div>
            <div class="col-md-1">
                <button type="button" class="btn btn-primary form-control" id="btn_imprimir" onclick="Imprimir();" title="Imprimir">
                    <i class="fa fa-print"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdPuntoVta">Punto de venta*</label>
                    @Html.DropDownListFor(q => q.IdPuntoVta, new SelectList(ViewBag.lst_punto_venta, "IdPuntoVta", "nom_PuntoVta"), new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.IdPuntoVta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-10">
                <div class="form-group">
                    <label for="IdCliente">Cliente*</label>
                    @Html.Partial("_CmbCliente_Guia", Model.IdCliente)
                    @Html.ValidationMessageFor(q => q.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control " onclick="CrearModificarCliente();">
                        <i class="fa fa-external-link-square"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-10">
                <div class="form-group">
                    <label for="IdPuntoVta">Contactos</label>
                    @Html.DropDownListFor(q => q.IdContacto, new SelectList(ViewBag.lst_cliente_contactos, "IdContacto", "Nombres_combo"), new { @class = "form-control", @id = "IdContacto" })
                    @Html.ValidationMessageFor(q => q.IdContacto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control " onclick="CrearModificarContacto();" title="Crear Contactos">
                        <i class="fa fa-address-book"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3" id="datos_punto_venta1">
                <div class="form-group">
                    <label for="vt_serie1">Establecimiento*</label>
                    @Html.TextBoxFor(q => q.Serie1, new { @class = "form-control", @id = "Serie1", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.Serie1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3" id="datos_punto_venta2">
                <div class="form-group">
                    <label for="vt_serie2">Pto. Emisión*</label>
                    @Html.TextBoxFor(q => q.Serie2, new { @class = "form-control", @id = "Serie2", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.Serie2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6" id="datos_punto_venta3">
                <div class="form-group">
                    <label for="vt_NumFactura"># Documento*</label>
                    @Html.TextBoxFor(q => q.NumGuia_Preimpresa, new { @class = "form-control", @id = "NumGuia_Preimpresa", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.NumGuia_Preimpresa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="col-md-6">

            <div class="col-md-5">
                <div class="form-group">
                    <label for="IdVendedor">Transportista*</label>
                    @Html.DropDownListFor(q => q.IdTransportista, new SelectList(ViewBag.lst_transportista, "IdTransportista", "Nombre"), new { @class = "form-control", @id = "IdTransportista" })
                    @Html.ValidationMessageFor(q => q.IdTransportista, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="vt_serie1">Placa*</label>
                    @Html.TextBoxFor(q => q.placa, new { @class = "form-control", @id = "placa" })
                    @Html.ValidationMessageFor(q => q.placa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="gi_fecha">Fecha</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.gi_fecha, settings =>
                    {
                        settings.Name = "gi_fecha";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Properties.AllowMouseWheel = false;
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.gi_fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    <label for="pf_observacion">Dirección origen</label>
                    @Html.TextBoxFor(q => q.Direccion_Origen, new { @class = "form-control", @id = "Direccion_Origen" })
                    @Html.ValidationMessageFor(q => q.Direccion_Origen, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="">Inicio traslado</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.gi_FechaInicioTraslado, settings =>
                    {
                        settings.Name = "gi_FechaInicioTraslado";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Properties.AllowMouseWheel = false;
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.gi_FechaInicioTraslado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    <label for="pf_observacion">Dirección destino</label>
                    @Html.TextBoxFor(q => q.Direccion_Destino, new { @class = "form-control", @id = "Direccion_Destino" })
                    @Html.ValidationMessageFor(q => q.Direccion_Destino, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="gi_FechaFinTraslado">Fin traslado</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.gi_FechaFinTraslado, settings =>
                    {
                        settings.Name = "gi_FechaFinTraslado";
                        settings.Properties.UseMaskBehavior = true;
                        settings.Properties.EditFormat = EditFormat.Date;
                        settings.Properties.EditFormatString = "dd/MM/yyyy";
                        settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Properties.AllowMouseWheel = false;
                    }).GetHtml()
                        @Html.ValidationMessageFor(q => q.gi_FechaFinTraslado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="form-group">
                    <label for="IdClienteContacto">Motivo de traslado</label>
                    @Html.DropDownListFor(q => q.IdMotivoTraslado, new SelectList(ViewBag.lst_tipo_traslado, "IdMotivoTraslado", "tr_Descripcion"), new { @class = "form-control", @id = "IdMotivoTraslado" })
                    @Html.ValidationMessageFor(q => q.IdMotivoTraslado, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4" id="DivGenerarFactura">
                <div class="form-group">
                    <label for="Marca_Biometrico"></label>
                    @Html.DevExpress().CheckBoxFor(q => q.GenerarFactura, settings =>
                            {
                                settings.Name = "GenerarFactura";
                                settings.Text = "Generar Factura";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){MostrarDatosFactura();}";
                            }).GetHtml()
                    @Html.ValidationMessageFor(q => q.GenerarFactura, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="pf_observacion">Observación</label>
                    @Html.TextBoxFor(q => q.gi_Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.gi_Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="codigo">Código</label>
                    @Html.TextBoxFor(q => q.CodGuiaRemision, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.CodGuiaRemision, "", new { @class = "text-danger", @id = "CodGuiaRemision" })
                </div>
            </div>
        </div>
    </div>




    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#detalle_guia" aria-controls="informacion_general" role="tab" data-toggle="tab" id="link_detalle_guia">Detalle guia</a>
            </li>
            <li>
                <a href="#tab_documentos_relacionados" aria-controls="contactos_telefonos" role="tab" data-toggle="tab">Documentos relacionados</a>
            </li>
            <li>
                <a href="#tab_datos_factura" aria-controls="datos_factura" role="tab" data-toggle="tab" id="link_datos_factura">Datos factura</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="detalle_guia">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <button type="button" class="btn btn-primary" onclick="MostrarModal()" title="Buscar facturas si guia">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_guias_remision_det")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_documentos_relacionados">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_Facturas_x_guia")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_datos_factura">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdVendedor">Vendedor*</label>
                                @Html.DropDownListFor(q => q.IdVendedor, new SelectList(ViewBag.lst_vendedor, "IdVendedor", "Ve_Vendedor"), new { @class = "form-control", @id = "IdVendedor" })
                                @Html.ValidationMessageFor(q => q.IdVendedor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdCatalogo_FormaPago">Forma de pago*</label>
                                @Html.DropDownListFor(q => q.IdCatalogo_FormaPago, new SelectList(ViewBag.lst_formapago, "IdCatalogo", "Nombre"), new { @class = "form-control", @id = "IdCatalogo_FormaPago" })
                                @Html.ValidationMessageFor(q => q.IdCatalogo_FormaPago, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdTerminoPago">Termino pago*</label>
                                @Html.DropDownListFor(q => q.vt_tipo_venta, new SelectList(ViewBag.lst_pago, "IdTerminoPago", "nom_TerminoPago"), new { @class = "form-control", @id = "vt_tipo_venta" })
                                @Html.ValidationMessageFor(q => q.vt_tipo_venta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdPuntoVta">Punto de venta*</label>
                                @Html.DropDownListFor(q => q.IdPuntoVta_Fact, new SelectList(ViewBag.lst_punto_venta_factura, "IdPuntoVta", "nom_PuntoVta"), new { @class = "form-control", @id = "IdPuntoVta_Fact" })
                                @Html.ValidationMessageFor(q => q.IdPuntoVta_Fact, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2" id="datos_punto_venta1_fact">
                            <div class="form-group">
                                <label for="Serie1">Establecimiento*</label>
                                @Html.TextBoxFor(q => q.vt_serie1, new { @class = "form-control", @id = "vt_serie1" })
                                @Html.ValidationMessageFor(q => q.vt_serie1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2" id="datos_punto_venta2_fact">
                            <div class="form-group">
                                <label for="Serie2">Pto. Emisión*</label>
                                @Html.TextBoxFor(q => q.vt_serie2, new { @class = "form-control", @id = "vt_serie2" })
                                @Html.ValidationMessageFor(q => q.vt_serie2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4" id="datos_punto_venta3_fact">
                            <div class="form-group">
                                <label for="NumNota_Impresa"># Documento*</label>
                                @Html.TextBoxFor(q => q.vt_NumFactura, new { @class = "form-control", @id = "vt_NumFactura" })
                                @Html.ValidationMessageFor(q => q.vt_NumFactura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="NumNota_Impresa">Observación factura</label>
                                @Html.TextBoxFor(q => q.ObservacionFactura, new { @class = "form-control", @id = "ObservacionFactura" })
                                @Html.ValidationMessageFor(q => q.ObservacionFactura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="modal fade" id="OpModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Facturas sin guias</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_FacturasSinGuia")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="seleccionar_aprobacion();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>


    <div class="box-footer">
        <a class="btn btn-default" href="@Url.Action("Index","GuiaRemision",new { Area = "Facturacion" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}



<script>
    $(function () {
        MostrarDatosFactura();
        CargarPuntosDeVenta_Factura();
        GetUltimoDocumento_Factura();
        get_direccion();
        get_placa();
        MostrarBotonesSRI();

        $("#IdSucursal").change(function () {
            CargarPuntosDeVenta();
            CargarPuntosDeVenta_Factura();
        });

        $("#IdPuntoVta_Fact").change(function () {
            GetUltimoDocumento_Factura();           
        });

        $("#IdContacto").change(function () {
            SetDireccionDestino();
        });
    });

    function MostrarModal() {
        GridViewPartial_FacturasSinGuia.PerformCallback();
        $("#OpModal").modal("show");
    }

    function MostrarDatosFactura() {
        if($("#IdCbteVta").val() > 0){
            $("#DivGenerarFactura").hide();

            $("#link_datos_factura").hide();
            $("#link_detalle_guia").click();
        }
        else{
            $("#DivGenerarFactura").show();

            if (GenerarFactura.GetChecked() == true) {
                $("#link_datos_factura").show();
                $("#link_datos_factura").click();

                SetDatosFactura();
            }
            else {
                $("#link_datos_factura").hide();
                $("#link_detalle_guia").click();
            }
        }
    }

    function SetDatosFactura() {
        var datos = {
            IdCliente: IdCliente.GetValue(),
            IdSucursal: $("#IdSucursal").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetDatosFactura", "GuiaRemision", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#IdVendedor").val(data.IdVendedor);
                $("#IdTerminoPago").val(data.IdTerminoPago);
                $("#IdCatalogo_FormaPago").val(data.IdCatalogo_FormaPago);
                $("#ObservacionFactura").val(data.ObservacionFactura);
            },
            error: function (error) {
            }
        });
    }
    function CargarFacturas() {
        var datos = {
            IdCliente: IdCliente.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Cargar_facturas", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

            },
            error: function (error) {
            }
        });
    }

    function CargarPuntosDeVenta() {
        $("#IdPuntoVta").empty();
        var datos = {
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CargarPuntosDeVenta", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdPuntoVta").append("<option value=" + row.IdPuntoVta + ">" + row.nom_PuntoVta + "</option>");
                    $("#IdPuntoVta").val(1);
                });
            },
            error: function (error) {
            }
        });
    }

    function get_placa() {
        var datos = {
            IdTransportista: $("#IdTransportista").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Get_placa", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#placa").val(data.Placa);

            },
            error: function (error) {
            }
        });
    }

    function get_direccion() {

        var datos = {
            IdCliente: IdCliente.GetValue(),
            IdContacto: $("#IdContacto").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_direcciones", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data != null) {
                    //$("#Direccion_Origen").val(data.Direccion_emp);
                    $("#Direccion_Destino").val(data.Direccion);
                }
            },
            error: function (error) {
                alert(error);
            }

        });
    }

    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location + "/Reportes/FacturacionReportes/FAC_009?IdEmpresa=" +@Core.Erp.Web.Helps.SessionFixed.IdEmpresa +"&IdSucursal=" +@Model.IdSucursal +"&IdBodega=" +@Model.IdBodega +"&IdGuiaRemision=" +@Model.IdGuiaRemision, '_blank');
        win.focus();
    }

    function GetInfoProducto(s, e) {
        $("#Secuencia").text(0);
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdProducto: s.GetValue()

        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetInfoProducto", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_guias_remision_det.GetEditor('IdCod_Impuesto').SetValue(data.IdCod_Impuesto_Iva);
            },
            error: function (error) {
            }
        });
    };

    function CargarPuntosDeVenta_Factura() {
        $("#IdPuntoVta_Fact").empty();
        var datos = {
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("CargarPuntosDeVenta_Factura", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdPuntoVta_Fact").append("<option value=" + row.IdPuntoVta + ">" + row.nom_PuntoVta + "</option>");
                    $("#IdPuntoVta_Fact").val($("#IdPuntoVta_Fact option:first").val());
                });
            },
            error: function (error) {
            }
        });
    }

    function GetUltimoDocumento_Factura() {
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta_Fact").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetUltimoDocumento_Factura", "GuiaRemision",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.data_puntovta != null) {
                    console.log(data.data_puntovta.EsElectronico);
                    if (data.data_puntovta.EsElectronico == true) {
                        $("#datos_punto_venta1_fact").hide();
                        $("#datos_punto_venta2_fact").hide();
                        $("#datos_punto_venta3_fact").hide();
                    }
                    else {
                        $("#datos_punto_venta1_fact").show();
                        $("#datos_punto_venta2_fact").show();
                        $("#datos_punto_venta3_fact").show();

                        if (data.data_talonario != null) {
                            $("#vt_serie1").val(data.data_talonario.Establecimiento);
                            $("#vt_serie2").val(data.data_talonario.PuntoEmision);
                            $("#vt_NumFactura").val(data.data_talonario.NumDocumento);
                        }
                    }
                }
            },
            error: function (error) {
            }
        });
    }

    function SetCodigo() {
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetCodigo", "GuiaRemision", new { Area = "Facturacion" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#CodGuiaRemision").val(data);
            },
            error: function (error) {
            }
        });
    }

    function MostrarBotonesSRI() {
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("MostrarBotonesSRI", "GuiaRemision", new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.resultado == 1)
                {
                    $("#ride").show();
                    $("#sri").show();
                }
                else
                {
                    $("#ride").hide();
                    $("#sri").hide();
                }
            },
            error: function (error) {
            }
        });
    }

    function cargar_lista_contactos() {
        var Id = IdCliente.GetValue();

        if (Id > 0)
        {
            var datos = {
                IdCliente: Id
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("cargar_lista_contactos", "ClienteContactos", new { Area = "Facturacion"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.each(data, function (i, row) {
                        $("#IdContacto").append("<option value=" + row.IdContacto + ">" + row.Nombres_combo + "</option>");
                    });
                },
                error: function (error) {
                }
            });
        }
        else{
            $("#IdContacto").empty();
        }
    }

    function SetDireccionDestino() {
        var datos = {
            IdCliente: IdCliente.GetValue(),
            IdContacto: $("#IdContacto").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetDireccionDestino", "ClienteContactos",new { Area = "Facturacion"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#Direccion_Destino").val(data);

            },
            error: function (error) {
            }
        });
    }
</script>


