@model Core.Erp.Info.Helps.cl_filtros_contabilidad_Info
@using System.Web.UI.WebControls
@{
    Layout = "~/Areas/Reportes/Views/Layout/_Layout_filtros.cshtml";
    ViewBag.Title = "CONTA_006";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
}
<script type="text/javascript">
    var textSeparator = ";";
    function updateText() {
        var selectedItems = IntArray.GetSelectedItems();
        checkComboBox.SetText(getSelectedItemsText(selectedItems));
    }
    function synchronizeListBoxValues(dropDown, args) {
        IntArray.UnselectAll();
        var texts = dropDown.GetText().split(textSeparator);
        var values = getValuesByTexts(texts);
        IntArray.SelectValues(values);
        updateText(); // for remove non-existing texts
    }
    function getSelectedItemsText(items) {
        var texts = [];
        for (var i = 0; i < items.length; i++)
            texts.push(items[i].text);
        return texts.join(textSeparator);
    }
    function getValuesByTexts(texts) {
        var actualValues = [];
        var item;
        for (var i = 0; i < texts.length; i++) {
            item = IntArray.FindItemByText(texts[i]);
            if (item != null)
                actualValues.push(item.value);
        }
        return actualValues;
    }
</script>

@using (Html.BeginForm("CONTA_006", "ContabilidadReportes", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q=>q.IdEmpresa, new { @id = "IdEmpresa"})
    <div class="box">
        <div class="box-header with-border">
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary">Aplicar filtros</button>
                </div>
            </div>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdSucursal">Sucursal*</label>
                            @Html.DevExpress().DropDownEditFor(q => q.IntArray, settings =>
                       {
                           settings.Name = "checkComboBox";
                           settings.Width = Unit.Percentage(100);

                           settings.SetDropDownWindowTemplateContent(c =>
                           {
                               @Html.DevExpress().ListBox(listBoxSettings =>
                               {
                                   listBoxSettings.Name = "IntArray";
                                   listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                                   listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;

                                   listBoxSettings.Height = Unit.Pixel(350);
                                   listBoxSettings.Width = Unit.Percentage(100);

                                   listBoxSettings.Properties.EnableSelectAll = true;
                                   listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                                   listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                                   foreach (var item in ViewBag.lst_sucursal)
                                   {
                                       listBoxSettings.Properties.Items.Add(item.Su_Descripcion, item.IdSucursal).Selected = item.Seleccionado;
                                   }
                                   listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "updateText";
                                   listBoxSettings.Properties.ClientSideEvents.Init = "updateText";
                               }).Render();
                               ViewContext.Writer.Write("<div style=\"margin: 6px; overflow: hidden;\">");
                               @Html.DevExpress().Button(buttonSettings =>
                               {
                                   buttonSettings.Name = "buttonClose";
                                   buttonSettings.Text = "Close";
                                   buttonSettings.Style.Add("float", "right");
                                   buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBox.HideDropDown(); }";
                                   buttonSettings.Height = 26;
                               }).Render();
                               ViewContext.Writer.Write("</div>");
                           });
                           settings.Properties.AnimationType = AnimationType.None;
                           settings.Properties.ClientSideEvents.TextChanged = "synchronizeListBoxValues";
                           settings.Properties.ClientSideEvents.DropDown = "synchronizeListBoxValues";
                       }).GetHtml()
                        </div>
                    </div>


                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="IdNivel">Año</label>
                            @Html.DropDownListFor(q => q.IdAnio, new SelectList(ViewBag.lst_anio, "IdanioFiscal", "IdanioFiscal"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(q => q.IdAnio, "", new { @class = "form", @role = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="IdNivel">Nivel</label>
                            @Html.DropDownListFor(q => q.IdNivel, new SelectList(ViewBag.lst_nivel, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(q => q.IdNivel, "", new { @class = "form", @role = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="balance">Balance</label>
                            @Html.DropDownListFor(q => q.balance, new SelectList(ViewBag.lst_balance, "Key", "Value"), new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="checkbox">
                            <div class="form-group">
                                @Html.DevExpress().CheckBoxFor(q => q.mostrar_saldos_en_0,
                         settings =>
                         {
                             settings.Name = "mostrar_saldos_en_0";
                             settings.Checked = false;
                             settings.Text = "Mostrar saldos en 0";
                         }
                     ).GetHtml()
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="checkbox">
                            <div class="form-group">
                                @Html.DevExpress().CheckBoxFor(q => q.MostrarSaldoAcumulado,
                         settings =>
                         {
                             settings.Name = "MostrarSaldoAcumulado";
                             settings.Checked = false;
                             settings.Text = "Mostrar acumulado";
                         }
                     ).GetHtml()
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            @Html.DevExpress().WebDocumentViewer(settings =>
       {
           settings.ClientSideEvents.Init = "function(s, e) {s.previewModel.reportPreview.zoom(1);}";
           settings.MobileMode = false;
           settings.Name = "webDocumentViewer";
       }).Bind(ViewBag.Report).GetHtml()
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            [@Session["IdEmpresa"]] @Session["nom_empresa"]
        </div>
        <!-- /.box-footer-->
    </div>
}