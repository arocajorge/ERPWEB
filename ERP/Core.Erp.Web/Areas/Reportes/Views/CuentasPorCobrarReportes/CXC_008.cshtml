@using System.Web.UI.WebControls
@model Core.Erp.Info.Helps.cl_filtros_facturacion_Info
@{
    Layout = "~/Areas/Reportes/Views/Layout/_Layout_filtros.cshtml";
    ViewBag.Title = "Listado de cobros";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
}
<script type="text/javascript">
    var textSeparator = ";";
    function updateText() {
        var selectedItems = StringArray.GetSelectedItems();
        checkComboBox.SetText(getSelectedItemsText(selectedItems));
    }
    function synchronizeListBoxValues(dropDown, args) {
        StringArray.UnselectAll();
        var texts = dropDown.GetText().split(textSeparator);
        var values = getValuesByTexts(texts);
        StringArray.SelectValues(values);
        updateText(); // for remove non-existing texts
    }
    function getSelectedItemsText(items) {
        var texts = [];
        for (var i = 0; i < items.length; i++)
            texts.push(items[i].text);
        return texts.join(textSeparator);
    }
    function getValuesByTexts(texts) {
        var actualValues = [];
        var item;
        for (var i = 0; i < texts.length; i++) {
            item = StringArray.FindItemByText(texts[i]);
            if (item != null)
                actualValues.push(item.value);
        }
        return actualValues;
    }
</script>
@using (Html.BeginForm("CXC_008", "CuentasPorCobrarReportes", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q=>q.IdEmpresa, new { @id = "IdEmpresa"})
<div class="box">
    <div class="box-header with-border">
        <div class="row">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Aplicar filtros</button>
            </div>
        </div>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>

    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="IdSucursal">Sucursal</label>
                        @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="IdCobro_tipo">Tipo de cobro</label>
                        @*@Html.DropDownListFor(q => q.IdCobro_tipo, new SelectList(ViewBag.lst_cobro, "IdCobro_tipo", "tc_descripcion"), new { @class = "form-control"})
                        @Html.ValidationMessageFor(q => q.IdCobro_tipo, "", new { @class = "text-danger" })*@
                        @Html.DevExpress().DropDownEditFor(q => q.StringArray, settings =>
                       {
                           settings.Name = "checkComboBox";
                           settings.Width = Unit.Percentage(100);

                           settings.SetDropDownWindowTemplateContent(c =>
                           {
                               @Html.DevExpress().ListBox(listBoxSettings =>
                               {
                                   listBoxSettings.Name = "StringArray";
                                   listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                                   listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;

                                   listBoxSettings.Height = Unit.Pixel(350);
                                   listBoxSettings.Width = Unit.Percentage(100);

                                   listBoxSettings.Properties.EnableSelectAll = true;
                                   listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                                   listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                                   foreach (var item in ViewBag.lst_cobro)
                                   {
                                       listBoxSettings.Properties.Items.Add(item.tc_descripcion, item.IdCobro_tipo).Selected = item.Seleccionado;
                                   }
                                   listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "updateText";
                                   listBoxSettings.Properties.ClientSideEvents.Init = "updateText";
                               }).Render();
                               ViewContext.Writer.Write("<div style=\"margin: 6px; overflow: hidden;\">");
                               @Html.DevExpress().Button(buttonSettings =>
                               {
                                   buttonSettings.Name = "buttonClose";
                                   buttonSettings.Text = "Close";
                                   buttonSettings.Style.Add("float", "right");
                                   buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBox.HideDropDown(); }";
                                   buttonSettings.Height = 26;
                               }).Render();
                               ViewContext.Writer.Write("</div>");
                           });
                           settings.Properties.AnimationType = AnimationType.None;
                           settings.Properties.ClientSideEvents.TextChanged = "synchronizeListBoxValues";
                           settings.Properties.ClientSideEvents.DropDown = "synchronizeListBoxValues";
                       }).GetHtml()
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="IdCliente">Cliente</label>
                        @Html.Partial("_CmbCliente_CXC", Model.IdCliente)
                        @Html.ValidationMessageFor(q => q.IdCliente, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="">Fecha inicio</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.DevExpress().DateEditFor(q=> q.fecha_ini, settings =>
                        {
                            settings.Name = "fecha_ini";
                            settings.Properties.UseMaskBehavior = true;
                            settings.Properties.EditFormat = EditFormat.Date;
                            settings.Properties.EditFormatString = "dd/MM/yyyy";
                            settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        }).GetHtml()
                            @Html.ValidationMessageFor(q => q.fecha_ini, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="">Fecha fin</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.DevExpress().DateEditFor(q => q.fecha_fin, settings =>
                       {
                           settings.Name = "fecha_fin";
                           settings.Properties.UseMaskBehavior = true;
                           settings.Properties.EditFormat = EditFormat.Date;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                           settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       }).GetHtml()
                            @Html.ValidationMessageFor(q => q.fecha_fin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-1">
                    <div class="form-group">
                        <label for="mostrar_detallado"></label>
                        @Html.DevExpress().CheckBoxFor(q => q.mostrarAnulados, settings =>
                           {
                               settings.Name = "mostrarAnulados";
                               settings.Text = "Mostrar anulados";

                           }).GetHtml()
                        @Html.ValidationMessageFor(q => q.mostrarAnulados, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
</div>
                
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">@ViewBag.Title</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    @Html.DevExpress().WebDocumentViewer(settings =>
               {
                   settings.ClientSideEvents.Init = "function(s, e) {s.previewModel.reportPreview.zoom(1);}";
                   settings.MobileMode = false;
                   settings.Name = "webDocumentViewer";
               }).Bind(ViewBag.Report).GetHtml()
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    [@Session["IdEmpresa"]] @Session["nom_empresa"]
                </div>
                <!-- /.box-footer-->
            </div>
            }
        <script>
        function cargar_cliente() {
            $("#IdClienteContacto").empty();

            var datos = {

                IdEmpresa: $("#IdEmpresa").val(),
                IdCliente: IdCliente.GetValue()

                    }
                    $.ajax({
                        type: 'POST',
                        data: JSON.stringify(datos),
                        url: '@Url.Action("cargar_cliente", "CuentasPorCobrarReportes",new { Area = "Reportes"})',
                        async: false,
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            $.each(data, function (i, row) {
                                $("#IdClienteContacto").append("<option value=" + row.IdContacto + ">" + row.Nombres + "</option>");
                                $("#IdClienteContacto").val("0");
                        });
                    },
                    error: function (error) {
                    }
                });
            };
    </script>

