@using System.Web.UI.WebControls;
@model Core.Erp.Info.Helps.cl_filtros_Info
@{
    Layout = "~/Areas/Reportes/Views/Layout/_Layout_filtros.cshtml";
    ViewBag.Title = "ROL_009";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
}
@using (Html.BeginForm("ROL_009", "RRHHReportes", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    <div class="box">
        <div class="box-header with-border">
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary">Aplicar filtros</button>
                </div>
            </div>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="IdRubro">Sucursal</label>
                            @Html.Partial("_CmbSucursal_reportes_RRHH", Model.IdSucursal)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="IdRubro">Tipo de nómina|</label>
                            @Html.Partial("_CmbTipoNomina", Model.IdTipoNomina)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="IdRubro">Area</label>
                            @Html.Partial("_CmbArea_Individual", Model.IdArea)
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="IdRubro">Empleado</label>
                            @Html.Partial("_CmbEmpleado_RRHH", Model.IdEmpleado)
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="IdRubro">Rubro</label>
                            @Html.Partial("_CmbRubro_roles", Model.IdRubro)
                            @Html.ValidationMessageFor(q => q.IdRubro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="">Fecha inicio*</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.DevExpress().DateEditFor(q=> q.fecha_ini, settings =>
                                {
                                    settings.Name = "fecha_ini";
                                    settings.Properties.UseMaskBehavior = true;
                                    settings.Properties.EditFormat = EditFormat.Date;
                                    settings.Properties.EditFormatString = "dd/MM/yyyy";
                                    settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.fecha_ini, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="">Fecha fin*</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.DevExpress().DateEditFor(q=> q.fecha_fin, settings =>
                                {
                                    settings.Name = "fecha_fin";
                                    settings.Properties.UseMaskBehavior = true;
                                    settings.Properties.EditFormat = EditFormat.Date;
                                    settings.Properties.EditFormatString = "dd/MM/yyyy";
                                    settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.fecha_fin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="">Estado novedades*</label>
                            <script type="text/javascript">
                                var textSeparator = ";";
                                function updateText() {
                                    var selectedItems = estado_novedad.GetSelectedItems();
                                    checkComboBox.SetText(getSelectedItemsText(selectedItems));
                                }
                                function synchronizeListBoxValues(dropDown, args) {
                                    estado_novedad.UnselectAll();
                                    var texts = dropDown.GetText().split(textSeparator);
                                    var values = getValuesByTexts(texts);
                                    estado_novedad.SelectValues(values);
                                    updateText(); // for remove non-existing texts
                                }
                                function getSelectedItemsText(items) {
                                    var texts = [];
                                    for (var i = 0; i < items.length; i++)
                                        texts.push(items[i].text);
                                    return texts.join(textSeparator);
                                }
                                function getValuesByTexts(texts) {
                                    var actualValues = [];
                                    var item;
                                    for (var i = 0; i < texts.length; i++) {
                                        item = checkListBox.FindItemByText(texts[i]);
                                        if (item != null)
                                            actualValues.push(item.value);
                                    }
                                    return actualValues;
                                }
                            </script>


                            @Html.DevExpress().DropDownEdit(settings => {
                            settings.Name = "checkComboBox";
                            settings.Width = Unit.Percentage(100);
                            //settings.Properties.DropDownWindowStyle.BackColor = Color.FromArgb(0xEDEDED);

                            settings.SetDropDownWindowTemplateContent(c => {
                                @Html.DevExpress().ListBox(listBoxSettings => {
                                    listBoxSettings.Name = "estado_novedad";
                                    listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                                    listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;
                                    //listBoxSettings.ControlStyle.BorderBottom.BorderColor = Color.FromArgb(0xDCDCDC);
                                    listBoxSettings.Height = Unit.Pixel(200);
                                    listBoxSettings.Width = Unit.Percentage(100);

                                    listBoxSettings.Properties.EnableSelectAll = true;
                                    listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                                    listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                                    listBoxSettings.Properties.Items.Add("PEN");
                                    listBoxSettings.Properties.Items.Add("CAN");
                                    listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "updateText";
                                    listBoxSettings.Properties.ClientSideEvents.Init = "updateText";
                                }).Render();
                                ViewContext.Writer.Write("<div style=\"margin: 6px; overflow: hidden;\">");
                                @Html.DevExpress().Button(buttonSettings => {
                                    buttonSettings.Name = "buttonClose";
                                    buttonSettings.Text = "Close";
                                    buttonSettings.Style.Add("float", "right");
                                    buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBox.HideDropDown(); }";
                                    buttonSettings.Height = 26;
                                }).Render();
                                ViewContext.Writer.Write("</div>");
                            });
                            settings.Properties.AnimationType = AnimationType.None;
                            settings.Properties.ClientSideEvents.TextChanged = "synchronizeListBoxValues";
                            settings.Properties.ClientSideEvents.DropDown = "synchronizeListBoxValues";
                        }).GetHtml()


                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="IdTipoServicio">Tipo</label>
                            @Html.DevExpress().ComboBoxFor(q => q.TipoRubro, setting =>
                       {
                           setting.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                           setting.Properties.Items.Add("Ingreso", "I");
                           setting.Properties.Items.Add("Egreso", "E");

                       }).GetHtml()
                            @Html.ValidationMessageFor(q => q.TipoRubro, "", new { @class = "text-danger" })
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>

    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            @Html.DevExpress().WebDocumentViewer(settings =>
       {
           settings.ClientSideEvents.Init = "function(s, e) {s.previewModel.reportPreview.zoom(1);}";
           settings.MobileMode = false;
           settings.Name = "webDocumentViewer";
       }).Bind(ViewBag.Report).GetHtml()
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            [@Session["IdEmpresa"]] @Session["nom_empresa"]
        </div>
        <!-- /.box-footer-->
    </div>
}
