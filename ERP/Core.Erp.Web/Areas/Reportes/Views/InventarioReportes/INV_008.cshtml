@using System.Web.UI.WebControls
@model Core.Erp.Info.Helps.cl_filtros_inventario_Info
@{
    Layout = "~/Areas/Reportes/Views/Layout/_Layout_filtros.cshtml";
    ViewBag.Title = "Movimiento de inventario";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
}
<script type="text/javascript">
    var textSeparator = ";";
    function updateText() {
        var selectedItems = IntArray.GetSelectedItems();
        checkComboBox.SetText(getSelectedItemsText(selectedItems));
    }
    function synchronizeListBoxValues(dropDown, args) {
        IntArray.UnselectAll();
        var texts = dropDown.GetText().split(textSeparator);
        var values = getValuesByTexts(texts);
        IntArray.SelectValues(values);
        updateText(); // for remove non-existing texts
    }
    function getSelectedItemsText(items) {
        var texts = [];
        for (var i = 0; i < items.length; i++)
            texts.push(items[i].text);
        return texts.join(textSeparator);
    }
    function getValuesByTexts(texts) {
        var actualValues = [];
        var item;
        for (var i = 0; i < texts.length; i++) {
            item = IntArray.FindItemByText(texts[i]);
            if (item != null)
                actualValues.push(item.value);
        }
        return actualValues;
    }
</script>

@using (Html.BeginForm("INV_008", "InventarioReportes", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q=>q.IdEmpresa, new { @id="IdEmpresa"})
    <div class="box">
        <div class="box-header with-border">
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary">Aplicar filtros</button>
                </div>
            </div>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdSucursal">Sucursal*</label>
                            @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_Descripcion"), new { @class = "form-control", @id = "IdSucursal" })
                            @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdBodega">Bodega</label>
                            @Html.DropDownListFor(q => q.IdBodega, new SelectList(ViewBag.lst_bodega, "IdBodega", "bo_Descripcion"), new { @class = "form-control", @id = "IdBodega" })
                            @Html.ValidationMessageFor(q => q.IdBodega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="">Fecha inicio*</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.DevExpress().DateEditFor(q => q.fecha_ini, settings =>
                                 {
                                     settings.Name = "fecha_ini";
                                     settings.Properties.UseMaskBehavior = true;
                                     settings.Properties.EditFormat = EditFormat.Date;
                                     settings.Properties.EditFormatString = "dd/MM/yyyy";
                                     settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                     settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                 }).GetHtml()
                                @Html.ValidationMessageFor(q => q.fecha_ini, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="">Fecha fin*</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.DevExpress().DateEditFor(q => q.fecha_fin, settings =>
                                 {
                                     settings.Name = "fecha_fin";
                                     settings.Properties.UseMaskBehavior = true;
                                     settings.Properties.EditFormat = EditFormat.Date;
                                     settings.Properties.EditFormatString = "dd/MM/yyyy";
                                     settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                     settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                 }).GetHtml()
                                @Html.ValidationMessageFor(q => q.fecha_fin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="IdCentroCosto">Producto</label>
                            @Html.Partial("_CmbProducto_Inventario", Model.IdProducto)
                            @Html.ValidationMessageFor(q => q.IdProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="IdCentroCosto">Centro costo</label>
                            @Html.Partial("_CmbCentroCosto_Inventario", Model.IdCentroCosto)
                            @Html.ValidationMessageFor(q => q.IdCentroCosto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="IdMovi_inven_tipo">Tipo</label>
                            @Html.DropDownListFor(q => q.tipo_movi, new SelectList(ViewBag.lst_TipoMov, "Key", "Value"), new { @class = "form-control", @id= "tipo_movi" })
                            @Html.ValidationMessageFor(q => q.tipo_movi, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="IdMovi_inven_tipo">Movimiento</label>
                            @Html.DropDownListFor(q => q.IdMovi_inven_tipo, new SelectList(ViewBag.lst_movi, "IdMovi_inven_tipo", "tm_descripcion"), new { @class = "form-control", @id = "IdMovi_inven_tipo" })
                            @Html.ValidationMessageFor(q => q.IdMovi_inven_tipo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="IdProductoTipo">Tipo producto</label>
                            @Html.DropDownListFor(q => q.IdProductoTipo, new SelectList(ViewBag.lstProductoTipo, "IdProductoTipo", "tp_descripcion"), new { @class = "form-control", @id = "IdProductoTipo" })
                            @Html.ValidationMessageFor(q => q.IdProductoTipo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdCategoria">Categoría</label>
                            @Html.DropDownListFor(q => q.IdCategoria, new SelectList(ViewBag.lst_categoria, "IdCategoria", "ca_Categoria"), new { @class = "form-control", @id = "IdCategoria" })
                            @Html.ValidationMessageFor(q => q.IdCategoria, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdLinea">Línea</label>
                            @Html.DropDownListFor(q => q.IdLinea, new SelectList(ViewBag.lst_linea, "IdLinea", "nom_linea"), new { @class = "form-control", @id = "IdLinea" })
                            @Html.ValidationMessageFor(q => q.IdLinea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="dGrupo">Grupo</label>
                            @Html.DropDownListFor(q => q.IdGrupo, new SelectList(ViewBag.lst_grupo, "IdGrupo", "nom_grupo"), new { @class = "form-control", @id = "IdGrupo" })
                            @Html.ValidationMessageFor(q => q.IdGrupo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="IdSubGrupo">Subgrupo</label>
                            @Html.DropDownListFor(q => q.IdSubGrupo, new SelectList(ViewBag.lst_subgrupo, "IdSubgrupo", "nom_subgrupo"), new { @class = "form-control", @id = "IdSubGrupo" })
                            @Html.ValidationMessageFor(q => q.IdSubGrupo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.Title</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">

                <div id="Tabs" role="tabpanel">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="active">
                            <a href="#tab_stock" aria-controls="stock" role="tab" data-toggle="tab">Detallado</a>
                        </li>
                        <li>
                            <a href="#tab_listado" aria-controls="listado" role="tab" data-toggle="tab">Resumido</a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-top: 20px">
                        <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_stock">
                            @Html.DevExpress().WebDocumentViewer(settings =>
                               {
                                   settings.ClientSideEvents.Init = "function(s, e) {s.previewModel.reportPreview.zoom(1);}";
                                   settings.MobileMode = false;
                                   settings.Name = "webDocumentViewer1";
                               }).Bind(ViewBag.Report).GetHtml()
                        </div>

                        <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_listado">

                            @Html.DevExpress().WebDocumentViewer(settings =>
                               {
                                   settings.ClientSideEvents.Init = "function(s, e) {s.previewModel.reportPreview.zoom(1);}";
                                   settings.MobileMode = false;
                                   settings.Name = "webDocumentViewer2";
                               }).Bind(ViewBag.ReportResumen).GetHtml()
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        [@Core.Erp.Web.Helps.SessionFixed.IdEmpresa] @Core.Erp.Web.Helps.SessionFixed.NomEmpresa
                    </div>
                    <!-- /.box-footer-->
                </div>
                <!-- /.box-footer-->
            </div>
        </div>
}
<script type="text/javascript">
$(function () {

    $("#IdSucursal").change(function () {
        cargar_bodega();
    });

    $("#tipo_movi").change(function () {
        cargar_tipo_movimiento();
    });
});


function cargar_bodega() {
    $("#IdBodega").empty();

    var datos = {
        IdEmpresa: $("#IdEmpresa").val(),
        IdSucursal: $("#IdSucursal").val()
    }

    $.ajax({
        type: 'POST',
        data: JSON.stringify(datos),
        url: '@Url.Action("cargar_bodega", "InventarioReportes", new { Area = "Reportes" })',
        async: false,
        bDeferRender: true,
        bProcessing: true,
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function (data) {
            $.each(data, function (i, row) {
                $("#IdBodega").append("<option value=" + row.IdBodega + ">" + row.bo_Descripcion + "</option>");
            });
        },
        error: function (error) {
        }
    });
};

function cargar_tipo_movimiento() {
    $("#IdMovi_inven_tipo").empty();

    var datos = {
        IdEmpresa: $("#IdEmpresa").val(),
        Signo:  $("#tipo_movi").val()
    }

    $.ajax({
        type: 'POST',
        data: JSON.stringify(datos),
        url: '@Url.Action("cargar_tipo_movimiento", "InventarioReportes", new { Area = "Reportes" })',
        async: false,
        bDeferRender: true,
        bProcessing: true,
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function (data) {
            $.each(data, function (i, row) {
                $("#IdMovi_inven_tipo").append("<option value=" + row.IdMovi_inven_tipo + ">" + row.tm_descripcion + "</option>");
            });
        },
        error: function (error) {
        }
    });
};
</script>
<script>
    $(function () {
        //cargar_bodega();
    });

    $("#IdSucursal").change(function () {
        cargar_bodega();
    });

    $("#IdCategoria").change(function () {
        cargar_lineas();
    });

    $("#IdLinea").change(function () {
        cargar_grupos();
    });
    $("#IdGrupo").change(function () {
        cargar_subgrupos();
    });


            function cargar_lineas() {
            $("#IdLinea").empty();

            var datos = {
                IdCategoria: $("#IdCategoria").val(),
                IdEmpresa: $("#IdEmpresa").val()
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("cargar_lineas", "InventarioReportes", new { Area = "Reportes" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.each(data, function (i, row) {
                        $("#IdLinea").append("<option value=" + row.IdLinea + ">" + row.nom_linea + "</option>");
                    });
                    $("#IdLinea").val("0");
                    cargar_grupos();
                },
                error: function (error) {
                }
            });
        };


    function cargar_grupos() {
        $("#IdGrupo").empty();

        var datos = {
            IdCategoria: $("#IdCategoria").val(),
            IdLinea: $("#IdLinea").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }

        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_grupos", "InventarioReportes", new { Area = "Reportes" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $.each(data, function (i, row) {
                    $("#IdGrupo").append("<option value=" + row.IdGrupo + ">" + row.nom_grupo + "</option>");
                });
                $("#IdGrupo").val("0");
                cargar_subgrupos();
            },
            error: function (error) {
            }
        });
    };


    function cargar_subgrupos() {
        $("#IdSubGrupo").empty();

        var datos = {
            IdCategoria: $("#IdCategoria").val(),
            IdLinea: $("#IdLinea").val(),
            IdGrupo: $("#IdGrupo").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }

        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_subgrupos", "InventarioReportes", new { Area = "Reportes" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdSubGrupo").append("<option value=" + row.IdSubgrupo + ">" + row.nom_subgrupo + "</option>");
                });
                $("#IdSubGrupo").val("0");
            },
            error: function (error) {
            }
        });
    };
</script>