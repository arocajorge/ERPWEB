@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_flujo_det";
        settings.CallbackRouteValues = new { Controller = "ArchivoBancario", Action = "GridViewPartial_flujo_det" };
        settings.KeyFieldName = "Secuencia";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ArchivoBancario", Action = "EditingAddNewFlujo", Area = "Banco" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ArchivoBancario", Action = "EditingUpdateFlujo", Area = "Banco" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ArchivoBancario", Action = "EditingDeleteFlujo", Area = "Banco" };

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFooter = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Columns.Add(column =>
        {
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(10);
            column.FieldName = "Secuencia";
            column.Caption = "# ";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Descricion";
            column.Caption = "Tipo flujo";
            column.Width = Unit.Percentage(40);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdTipoFlujo";
            column.Caption = "Tipo flujo";
            column.Width = Unit.Percentage(40);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbFlujo_Tipo", DataBinder.Eval(c.DataItem, "IdTipoFlujo"));
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Porcentaje";
            column.Caption = "Porcentaje";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
                q.ClientSideEvents.ValueChanged = "function(s,e,){CalcularValor()}";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Valor";
            column.Caption = "Valor";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().SpinEdit(q =>
            {
                q.MinValue = 0;
                q.Width = Unit.Percentage(100);
                q.ClientSideEvents.ValueChanged = "function(s,e,){CalcularPorcentaje()}";
            });
        });

        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Valor");

        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()