@model Core.Erp.Info.Banco.ba_Archivo_Transferencia_Info
@{
    ViewBag.Title = "Contabilizar archivo bancario";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script>

    function MostrarModalPlantilla() {
        $("#PlantillaModal").modal("show");
    }
    function GetValor()
    {
        var datos = {
            IdTransaccionSession : $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetValor", "ArchivoBancario",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#cb_Valor").val(data);
                actualizarGridDetFlujo();
            },
            error: function (error) {
            }
        });
    }
    function AgregarPlantilla(IdPlantilla) {
        var datos = {
            Valor: $("#cb_Valor").val(),
            IdPlantillaTipoFlujo: IdPlantilla,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("cargar_PlantillaTipoFlujoArchivo", "ArchivoBancario",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_flujo_det.PerformCallback();
            },
            error: function (error) {
            }
        });
        $("#PlantillaModal").modal("hide");
    }

    function actualizarGridDetFlujo() {
        var datos = {
            Valor: $("#cb_Valor").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("actualizarGridDetFlujoArchivo", "ArchivoBancario", new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_flujo_det.PerformCallback();
            },
            error: function (error) {
            }
        });
    }

    function ArmarDiario() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdBanco: $("#IdBanco").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ArmarDiario", "ArchivoBancario", new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_comprobante_detalle.PerformCallback();
            },
            error: function (error) {
            }
        });
    }

    function CalcularPorcentaje() {
        var valor = GridView_flujo_det.GetEditor('Valor').GetValue();
        var ValorTotal = $("#cb_Valor").val();
        var PorcentajeSet = (valor * 100) / ValorTotal

        GridView_flujo_det.GetEditor('Porcentaje').SetValue(PorcentajeSet);
    }

    function CalcularValor() {
        var porcentaje = GridView_flujo_det.GetEditor('Porcentaje').GetValue();
        var ValorTotal = $("#cb_Valor").val();
        var ValorSet = (ValorTotal * porcentaje) / 100

        GridView_flujo_det.GetEditor('Valor').SetValue(ValorSet);
    }
</script>

<script>
    var selectedIDs;
    function OnBeginCallback(s, e) {
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdOrdenPago", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }
    function MostrarModal() {
        selectedIDs = "";

        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListPorCruzar", "ArchivoBancario",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_archivo_bancario_det_op.PerformCallback();
                GridView_archivo_bancario_det_op.UnselectRows();
                $("#OpModal").modal("show");

            },
            error: function (error) {
            }
        });
    }


    function AddOP() {
        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("EditingAddNew", "ArchivoBancario",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
         },
            error: function (error) {
            }
        });
        selectedIDs = "";
        GridView_archivo_bancario_det_op.PerformCallback();
        GridView_archivo_bancario_det_op.UnselectRows();
        GridView_archivo_bancario_det.PerformCallback();
        $("#OpModal").modal("hide");
    }
    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/BancoReportes/BAN_010?IdEmpresa="+@Model.IdEmpresa+"&IdArchivo="+@Model.IdArchivo, '_blank');
        win.focus();
    }
</script>

@using (Html.BeginForm("Contabilizar", "ArchivoBancario", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdArchivo)
    @Html.HiddenFor(q => q.SecuencialInicial)
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    <div class="row">
        <div class="col-md-12">
            
            <div class="col-md-9">
                <div class="form-group">
                    <label for="ICatalogo">Nombre archivo*</label>
                    @Html.TextBoxFor(q => q.Nom_Archivo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Nom_Archivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-1">
                <label for="IdImprimir"></label>
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" id="btn_imprimir" onclick="Imprimir();" title="Imprimir">
                        <i class="fa fa-print"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <label for="IdImprimirtxt"></label>
                <div class="form-group">
                    <a type="button" class="btn btn-primary form-control" title="Descargar" href="@Url.Action("get_archivo","ArchivoBancario",new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdArchivo =Model.IdArchivo },null)">
                        <i class="fa fa-download"></i>
                    </a>
                </div>
            </div>
            <div class="col-md-1">
                <label for="IdNuevo"></label>
                <div class="form-group">
                    <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","ArchivoBancario",new { Area = "Banco", IdEmpresa = Model.IdEmpresa },null)">
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_descripcion"), new { @class = "form-control", @id = "IdSucursal", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="IdBanco">Banco*</label>
                    @Html.DropDownListFor(q => q.IdBanco, new SelectList(ViewBag.lst_cuenta_bancarias, "IdBanco", "ba_descripcion"), new { @class = "form-control", @id = "IdBanco", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdBanco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBanco">Proceso bancario*</label>
                    @Html.DropDownListFor(q => q.IdProceso_bancario, new SelectList(ViewBag.lst_proceso, "IdProceso", "NombreProceso"), new { @class = "form-control", @id = "IdProceso", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdProceso_bancario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="cb_Fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.Fecha, settings =>
                   {
                       settings.Name = "Fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       settings.Properties.DropDownButton.Enabled = false;
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    


    <div class="row">
        <div class="col-md-12">
            <div class="col-md-10">
                <div class="form-group">
                    <label for="ICatalogo">Observación*</label>
                    @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ICatalogo">Valor*</label>
                    @Html.TextBoxFor(q => q.cb_Valor, new { @class = "form-control", @id = "cb_Valor", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_op" aria-controls="op" role="tab" data-toggle="tab">Ordenes de pago</a>
            </li>
            <li>
                <a href="#tab_diario" aria-controls="vales" role="tab" data-toggle="tab">Diario</a>
            </li>
            <li>
                <a href="#tab_flujo" aria-controls="flujo" role="tab" data-toggle="tab">Flujo</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_op">

                <div class="modal fade" id="OpModal" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Ordenes de pago</h4>
                            </div>
                            <div class="modal-body">
                                @Html.Action("GridViewPartial_archivo_bancario_det_op")
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" onclick="AddOP();">Aceptar</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                            </div>
                        </div>

                    </div>
                </div>
                @*
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-1">
                <button type="button" class="btn btn-primary form-control" id="btn_buscar_op" onclick="MostrarModal();" title="Buscar órdenes">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
    </div>
    <br />
                *@
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_archivo_bancario_det")

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_flujo">

                <div class="modal fade" id="PlantillaModal" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Plantilla tipo de flujo</h4>
                            </div>
                            <div class="modal-body">
                                @Html.Action("GridViewPartial_TipoFlujoPlantilla_Asignar", new { Area = "Banco", Controller = "ArchivoBancario" })
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                            </div>
                        </div>

                    </div>
                </div>
                @*
    <div class="row">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary" id="btn_buscar_plantilla" onclick="MostrarModalPlantilla();">
                <i class="fa fa-search" title="Plantilla Tipo de Flujo"></i>
            </button>
        </div>
    </div>
    <br />
                *@
                @Html.Action("GridViewPartial_flujo_det", new { Area = "Banco", Controller = "ArchivoBancario" })
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 1em;" id="tab_diario">
                @Html.Action("GridViewPartial_comprobante_detalle", new { Area = "Contabilidad", Controller = "ComprobanteContable" })
            </div>

        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","ArchivoBancario",new { Area = "Banco" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}


<script>
        $("#IdBanco").change(function () {
        cargar_procesos();
    });
    $("#IdSucursal").change(function () {
        GetListBancoPorSucursal();
        cargar_procesos();
    });

        function GetListBancoPorSucursal() {
        $("#IdBanco").empty();
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListBancoPorSucursal", "BancoCuenta",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBanco").append("<option value=" + row.IdBanco + ">" + row.ba_descripcion+ "</option>");
                });
            },
            error: function (error) {
            }
        });
    }



    function cargar_procesos() {
        $("#IdProceso").empty();

                var datos = {
                    IdBanco: $("#IdBanco").val(),
                    SeContabiliza: 1
                }

                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("get_list_procesos", "ProcesosBancariosPorEmpresa", new { Area = "General" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        $.each(data, function (i, row) {
                            $("#IdProceso").append("<option value=" + row.IdProceso + ">" + row.NombreProceso + "</option>");

                        });
                    },
                    error: function (error) {
                    }
                });
    };

</script>
