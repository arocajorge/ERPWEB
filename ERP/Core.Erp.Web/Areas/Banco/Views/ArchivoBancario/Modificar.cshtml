@model Core.Erp.Info.Banco.ba_Archivo_Transferencia_Info
@{
    ViewBag.Title = "Nueva archivo bancario";
    if (Session["IdUsuario"] == null || Session["IdEmpresa"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Modificar", "ArchivoBancario", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdArchivo)
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdSucursal">Sucursal*</label>
                    @Html.DropDownListFor(q => q.IdSucursal, new SelectList(ViewBag.lst_sucursal, "IdSucursal", "Su_descripcion"), new { @class = "form-control", @id = "IdSucursal", @disabled ="disabled" })
                    @Html.ValidationMessageFor(q => q.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="IdBanco">Banco*</label>
                    @Html.DropDownListFor(q => q.IdBanco, new SelectList(ViewBag.lst_cuenta_bancarias, "IdBanco", "ba_descripcion"), new { @class = "form-control", @id = "IdBanco", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.IdBanco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBanco">Proceso bancario*</label>
                    @Html.DropDownListFor(q => q.IdProceso_bancario, new SelectList(ViewBag.lst_proceso, "IdProceso", "NombreProceso"), new { @class = "form-control", @id = "IdProceso", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.IdProceso_bancario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="cb_Fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q=> q.Fecha, settings =>
                   {
                       settings.Name = "Fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       settings.Properties.DropDownButton.Enabled = false;
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="ICatalogo">Código archivo</label>
                    @Html.TextBoxFor(q => q.cod_archivo, new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.cod_archivo, "", new { @class = "text-danger"})
                </div>
            </div>
            <div class="col-md-9">
                <div class="form-group">
                    <label for="ICatalogo">Nombre archivo*</label>
                    @Html.TextBoxFor(q => q.Nom_Archivo, new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.Nom_Archivo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="ICatalogo">Observación*</label>
                    @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","ArchivoBancario",new { Area = "Banco" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}


<script>
    $(function () {
        cargar_procesos();
        GetListBancoPorSucursal();

    });
        $("#IdBanco").change(function () {
        $("#IdProceso").empty();
        cargar_procesos();
    });
    $("#IdSucursal").change(function () {
        GetListBancoPorSucursal();
    });

        function GetListBancoPorSucursal() {
        $("#IdBanco").empty();
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListBancoPorSucursal", "BancoCuenta",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBanco").append("<option value=" + row.IdBanco + ">" + row.ba_descripcion+ "</option>");
                });
            },
            error: function (error) {
            }
        });
    }



    function cargar_procesos() {
        $("#IdProceso").empty();

                var datos = {
                    IdBanco: $("#IdBanco").val()
                }

                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("get_list_procesos", "ProcesosBancariosPorEmpresa", new { Area = "General" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        $.each(data, function (i, row) {
                            $("#IdProceso").append("<option value=" + row.IdProceso + ">" + row.NombreProceso + "</option>");

                        });
                    },
                    error: function (error) {
                    }
                });
    };

</script>
