@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_CbteBan_x_CbteCble";
        settings.CallbackRouteValues = new { Controller = "ParametroBanco", Action = "GridViewPartial_CbteBan_x_CbteCble", Area = "Banco" };
        settings.KeyFieldName = "Secuencia";
        settings.Width = Unit.Percentage(100);

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ParametroBanco", Action = "EditingAddNew", Area = "Banco" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ParametroBanco", Action = "EditingUpdate", Area = "Banco" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ParametroBanco", Action = "EditingDelete", Area = "Banco" };

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.Settings.ShowFooter = true;
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["Tipo_DebCred"] = "D";
        };
        settings.Columns.Add(column =>
        {
            column.FieldName = "CodTipoCbteBan";
            column.Caption = "Comprobante bancario";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("Descripcion", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "Descripcion";
                p.ValueField = "CodTipoCbteBan";
                p.ValueType = typeof(string);
                p.DataSource = new Core.Erp.Bus.Banco.ba_Cbte_Ban_tipo_Bus().get_list();
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdTipoCbteCble";
            column.Caption = "Comprobante contable";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("tc_TipoCbte", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "tc_TipoCbte";
                p.ValueField = "IdTipoCbte";
                p.ValueType = typeof(int);
                p.DataSource = new Core.Erp.Bus.Contabilidad.ct_cbtecble_tipo_Bus().get_list(Model.IdEmpresa, false);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdTipoCbteCble_Anu";
            column.Caption = "Comprobante contable anulación";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("tc_TipoCbte", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "tc_TipoCbte";
                p.ValueField = "IdTipoCbte";
                p.ValueType = typeof(int);
                p.DataSource = new Core.Erp.Bus.Contabilidad.ct_cbtecble_tipo_Bus().get_list(Model.IdEmpresa, false);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "Tipo_DebCred";
            column.Caption = "Tipo";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("Value", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "Key";
                p.ValueField = "Key";
                p.ValueType = typeof(string);
                p.DataSource = ViewBag.lst_DebCre;
            });
        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });

}
@grid.Bind(Model.Lista_CbteBan_x_CbteCble).GetHtml()