@model Core.Erp.Info.Banco.ba_Banco_Cuenta_Info
@{
    ViewBag.Title = "Consultar cuenta bancaria";
    if (string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Erp.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

@using (Html.BeginForm("Consultar", "BancoCuenta", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa)
    @Html.HiddenFor(q => q.IdBanco)
    @Html.HiddenFor(q => q.IdBanco_Financiero)
    @Html.HiddenFor(q => q.IdTransaccionSession)

    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-9 col-md-1">
                @if (@ViewBag.Nuevo == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo", "BancoCuenta", new { Area = "Banco", IdEmpresa = Model.IdEmpresa }, null)">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Modificar == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Modificar" href="@Url.Action("Modificar", "BancoCuenta", new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdBanco = Model.IdBanco }, null)">
                            <i class="fa fa-edit"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Anular == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Anular" href="@Url.Action("Anular", "BancoCuenta", new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdBanco = Model.IdBanco }, null)">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdBanco_Financiero">Banco*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdBanco_Financiero, settings =>
               {
                   settings.Name = "IdBanco_Financiero";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdBanco", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("ba_descripcion", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                   //Campo ID
                   settings.Properties.ValueField = "IdBanco";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "ba_descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                   settings.ReadOnly = true;
                   settings.Properties.DropDownButton.Enabled = false;
               }).BindList(ViewBag.lst_banco).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdBanco_Financiero, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="ba_Tipo">Tipo de cuenta*</label>
                    @Html.DropDownListFor(q => q.ba_Tipo, new SelectList(ViewBag.lst_cta, "Key", "Value"), new { @class = "form-control", @id = "ba_Tipo", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.ba_Tipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="ba_Num_Cuenta">Número de cuenta*</label>
                    @Html.TextBoxFor(q => q.ba_Num_Cuenta, new { @class = "form-control", @id = "ba_Num_Cuenta", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.ba_Num_Cuenta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="ba_num_digito_cheq">Dígitos por cheque*</label>
                    @Html.TextBoxFor(q => q.ba_num_digito_cheq, new { @class = "form-control", @id = "ba_num_digito_cheq" })
                    @Html.ValidationMessageFor(q => q.ba_num_digito_cheq, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="ba_descripcion">Nombre de la cuenta*</label>
                    @Html.TextBoxFor(q => q.ba_descripcion, new { @class = "form-control", @id = "ba_descripcion", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.ba_descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdCtaCble">Cuenta contable bancos*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdCtaCble, settings =>
               {
                   settings.Name = "IdCtaCble";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                   settings.Properties.Columns.Add("IdCtaCble", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   settings.Properties.Columns.Add("pc_cuenta", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                   //Campo ID
                   settings.Properties.ValueField = "IdCtaCble";
                   settings.Properties.ValueType = typeof(string);
                   settings.Properties.TextField = "pc_cuenta";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
               }).BindList(ViewBag.lst_cuenta).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdCtaCble, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="Imprimir_Solo_el_cheque">Tipo de impresión</label>
                    @Html.DropDownListFor(q => q.Imprimir_Solo_el_cheque, new SelectList(ViewBag.lst_impresion, "Key", "Value"), new { @class = "form-control", @id = "ba_Tipo" })
                    @Html.ValidationMessageFor(q => q.Imprimir_Solo_el_cheque, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="EsFlujoObligatorio"></label>
                    @Html.DevExpress().CheckBoxFor(q => q.EsFlujoObligatorio, settings =>
                           {
                               settings.Name = "EsFlujoObligatorio";
                               settings.Text = "Es flujo obligatorio";
                           }).GetHtml()
                    @Html.ValidationMessageFor(q => q.EsFlujoObligatorio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="">Detalle</label>
                    @Html.Action("GridViewPartial_cuentas_x_sucursal")
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <a class="btn btn-default" href="@Url.Action("Index","BancoCuenta", new { Area = "Banco"  },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}